{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js\";\nimport React, { useState, useReducer } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport Actions from \"../Actions/Actions\";\n/* Validator Component determines which fields need to be filled in based on a given predicate */\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n\nconst initialState = {};\n/* The reducer passes the action onto the state changing it (In this case simply adding the payload to a copy of the state, \n  sending a new LOGIN state to the server) */\n\nconst actionReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      const ws = action.payload.socket;\n      console.log(action.payload);\n      var obj = Object.assign({ ...state\n      }, action.payload.action, action.payload.username, action.payload.password);\n      return ws.send(obj);\n\n    case \"REGISTER\":\n      return;\n\n    default:\n      return state;\n  }\n};\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @property history is passed on due to Login being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\n\n\nconst Login = ({\n  history,\n  webSocket\n}) => {\n  const [newState, dispatch] = useReducer(actionReducer, initialState);\n  /* Payload is the data object to be send to the reducer */\n\n  const loginAction = ({\n    values\n  }) => {\n    dispatch({\n      type: \"LOGIN\",\n      payload: {\n        action: \"login\",\n        username: values.Username,\n        password: values.Password,\n        socket: values.socket\n      }\n    });\n  };\n\n  const registerAction = ({\n    values\n  }) => {\n    dispatch({\n      type: \"REGISTER\",\n      payload: {\n        action: values.action,\n        username: values.username,\n        password: values.password,\n        socket: values.webSocket\n      }\n    });\n  };\n\n  const formik = useFormik({\n    /* These initial values are needed in order to initalise the form values to be submitted*/\n    initialValues: {\n      Username: \"\",\n      Password: \"\",\n      socket: webSocket\n    },\n    validate,\n    onSubmit: values => {\n      /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n      loginAction({\n        values\n      });\n      history.push(\"/start\");\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-center h-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Username\",\n    name: \"Username\",\n    type: \"Text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), formik.touched.Username && formik.errors.Username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, formik.errors.Username) : null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Password\",\n    name: \"Password\",\n    type: \"Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, formik.errors.Password) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js"],"names":["React","useState","useReducer","Link","useFormik","Actions","validate","values","errors","Username","Password","initialState","actionReducer","state","action","type","ws","payload","socket","console","log","obj","Object","assign","username","password","send","Login","history","webSocket","newState","dispatch","loginAction","registerAction","formik","initialValues","onSubmit","push","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport Actions from \"../Actions/Actions\";\n\n/* Validator Component determines which fields need to be filled in based on a given predicate */\nconst validate = (values) => {\n  const errors = {};\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n\nconst initialState = {};\n/* The reducer passes the action onto the state changing it (In this case simply adding the payload to a copy of the state, \n  sending a new LOGIN state to the server) */\nconst actionReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      const ws = action.payload.socket;\n      console.log(action.payload);\n      var obj = Object.assign(\n        { ...state },\n        action.payload.action,\n        action.payload.username,\n        action.payload.password\n      );\n      return ws.send(obj);\n    case \"REGISTER\":\n      return;\n    default:\n      return state;\n  }\n};\n\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @property history is passed on due to Login being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\nconst Login = ({ history, webSocket }) => {\n  const [newState, dispatch] = useReducer(actionReducer, initialState);\n/* Payload is the data object to be send to the reducer */\n  const loginAction = ({ values }) => {\n    dispatch({\n      type: \"LOGIN\",\n      payload: {\n        action: \"login\",\n        username: values.Username,\n        password: values.Password,\n        socket: values.socket,\n      },\n    });\n  };\n  const registerAction = ({ values }) => {\n    dispatch({\n      type: \"REGISTER\",\n      payload: {\n        action: values.action,\n        username: values.username,\n        password: values.password,\n        socket: values.webSocket,\n      },\n    });\n  };\n\n  const formik = useFormik({\n    /* These initial values are needed in order to initalise the form values to be submitted*/\n    initialValues: { Username: \"\", Password: \"\", socket: webSocket},\n    \n    validate,\n    onSubmit: (values) => {\n      /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n      loginAction({ values });\n      history.push(\"/start\");\n    },\n  });\n  return (\n    <div className=\"flex items-center justify-center h-screen\">\n      <form\n        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \"\n        onSubmit={formik.handleSubmit}\n      >\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Username\"\n            name=\"Username\"\n            type=\"Text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Username}\n          ></input>\n          {formik.touched.Username && formik.errors.Username ? (\n            <div className=\"text-red-600\">{formik.errors.Username}</div>\n          ) : null}\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Password\"\n          >\n            Password\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Password\"\n            name=\"Password\"\n            type=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Password}\n          ></input>\n          {formik.touched.Password && formik.errors.Password ? (\n            <div className=\"text-red-600\">{formik.errors.Password}</div>\n          ) : null}\n          <button\n            className=\"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"submit\"\n          >\n            Login\n          </button>\n          <Link\n            to=\"/register\"\n            className=\" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"button\"\n          >\n            Register\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}