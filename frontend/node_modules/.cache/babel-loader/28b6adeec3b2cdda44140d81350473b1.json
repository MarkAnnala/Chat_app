{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Container/Container.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport Login from \"../Login/Login\";\nimport Register from \"../Register/Register\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n/**\n * Container is the component that makes sure to route to specific component on start page\n * TODO more functionality when we can use user objects etc\n * @returns returns the actuall component that should be rendered depending on pathname\n */\n\nconst Container = () => {\n  // so we can dispatch actions to the store\n  const dispatch = useDispatch(); // used to keep a mutable ref object - in this case the websocket\n\n  const wsRef = useRef(); // Initiates the websocket client on mount \n\n  useEffect(() => {\n    // if current prop of ref is null -> initialize new websocket connection\n    if (!wsRef.current) {\n      wsRef.current = new WebSocket(\"ws://localhost:8080/websocket\");\n      dispatch(actions.connect(wsRef.current)); // add it to the redux store \n    }\n\n    wsRef.current.onmessage = msg => {\n      console.log(msg.data);\n      dispatch(actions.response(msg)); // handle the response\n    };\n  });\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 50\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/start\",\n    render: props => /*#__PURE__*/React.createElement(LandingPage, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 49\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    render: props => /*#__PURE__*/React.createElement(Register, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 52\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Container;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Container/Container.js"],"names":["React","useRef","useEffect","BrowserRouter","Route","Switch","LandingPage","Login","Register","actions","useDispatch","Container","dispatch","wsRef","current","WebSocket","connect","onmessage","msg","console","log","data","response","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,WAAT,QAA2B,aAA3B;AAEA;;;;;;AAKA,MAAMC,SAAS,GAAG,MAAM;AAEtB;AACA,QAAMC,QAAQ,GAAGF,WAAW,EAA5B,CAHsB,CAKtB;;AACA,QAAMG,KAAK,GAAGZ,MAAM,EAApB,CANsB,CAQtB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACW,KAAK,CAACC,OAAX,EAAoB;AAClBD,MAAAA,KAAK,CAACC,OAAN,GAAgB,IAAIC,SAAJ,CAAc,+BAAd,CAAhB;AACAH,MAAAA,QAAQ,CAACH,OAAO,CAACO,OAAR,CAAgBH,KAAK,CAACC,OAAtB,CAAD,CAAR,CAFkB,CAEwB;AAC3C;;AACDD,IAAAA,KAAK,CAACC,OAAN,CAAcG,SAAd,GAA2BC,GAAD,IAAS;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAT,MAAAA,QAAQ,CAACH,OAAO,CAACa,QAAR,CAAiBJ,GAAjB,CAAD,CAAR,CAFiC,CAEE;AACpC,KAHD;AAID,GAVQ,CAAT;AAYA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,MAAM,EAAGK,KAAD,iBAAW,oBAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,MAAM,EAAGA,KAAD,iBAAW,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,MAAM,EAAGA,KAAD,iBAAW,oBAAC,QAAD,oBAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CA9BD;;AAgCA,eAAeZ,SAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport Login from \"../Login/Login\";\nimport Register from \"../Register/Register\";\n\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch} from \"react-redux\";\n\n/**\n * Container is the component that makes sure to route to specific component on start page\n * TODO more functionality when we can use user objects etc\n * @returns returns the actuall component that should be rendered depending on pathname\n */\nconst Container = () => {\n\n  // so we can dispatch actions to the store\n  const dispatch = useDispatch();\n\n  // used to keep a mutable ref object - in this case the websocket\n  const wsRef = useRef();\n\n  // Initiates the websocket client on mount \n  useEffect(() => {\n    // if current prop of ref is null -> initialize new websocket connection\n    if (!wsRef.current) {\n      wsRef.current = new WebSocket(\"ws://localhost:8080/websocket\");\n      dispatch(actions.connect(wsRef.current)); // add it to the redux store \n    }\n    wsRef.current.onmessage = (msg) => {\n      console.log(msg.data);\n      dispatch(actions.response(msg));   // handle the response\n    };\n  });\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact render={(props) => <Login {...props} />} />\n        <Route path=\"/start\" render={(props) => <LandingPage {...props} />} />\n        <Route path=\"/register\" render={(props) => <Register {...props} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}