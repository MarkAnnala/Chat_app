{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/SideDisplayList/Logout/Logout.js\";\nimport React from \"react\";\nimport * as actions from \"../../../actions/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst axios = require(\"axios\");\n/**\n * Handle the logout http response with backend\n * @param {String} username the username of the user\n * @param {String} magicToken the magictoken used for authentication on websocket connection\n * @param {function} setLogoutSuccess callback function used to set state of bool upon logout\n */\n\n\nconst logoutHandler = async (username, magicToken, setLogoutSuccess) => {\n  try {\n    const response = await axios.post(\"/\", JSON.stringify({\n      action: \"logout\",\n      username: username,\n      magic_token: magicToken\n    }));\n    const data = await response;\n\n    switch (data.status) {\n      case 200:\n        {\n          console.log(\"200\");\n          setLogoutSuccess(true);\n          break;\n        }\n\n      case 404:\n        {\n          console.log(\"404\");\n          break;\n        }\n\n      default:\n        console.log(\"default catch\");\n        break;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n/**\n * Component that handles the logout functionality\n * TODO STYLING!!\n * @returns clickable button that will logout the user\n */\n\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  const magicToken = useSelector(state => state.socketState.magicToken);\n  const username = useSelector(state => state.socketState.username);\n  const [logoutSuccess, setLogoutSuccess] = React.useState(false);\n  React.useEffect(() => {\n    if (logoutSuccess === true) {\n      dispatch(actions.logOut());\n      /* Reset socketState */\n\n      dispatch(actions.resetLoginState());\n      /* Reset loginState  -- this will trigger redirect to login page! */\n\n      console.log(\"Successfuly logged out!\");\n    }\n  }, [logoutSuccess, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-white cursor-pointer rounded rounded-full \",\n    onClick: () => logoutHandler(username, magicToken, setLogoutSuccess),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"LOGOUT\");\n};\n\nexport default Logout;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/SideDisplayList/Logout/Logout.js"],"names":["React","actions","useDispatch","useSelector","axios","require","logoutHandler","username","magicToken","setLogoutSuccess","response","post","JSON","stringify","action","magic_token","data","status","console","log","error","Logout","dispatch","state","socketState","logoutSuccess","useState","useEffect","logOut","resetLoginState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;AAEA;;;;;;;;AAMA,MAAMC,aAAa,GAAG,OAAOC,QAAP,EAAiBC,UAAjB,EAA6BC,gBAA7B,KAAkD;AACtE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CACrB,GADqB,EAErBC,IAAI,CAACC,SAAL,CAAe;AACbC,MAAAA,MAAM,EAAE,QADK;AAEbP,MAAAA,QAAQ,EAAEA,QAFG;AAGbQ,MAAAA,WAAW,EAAEP;AAHA,KAAf,CAFqB,CAAvB;AAQA,UAAMQ,IAAI,GAAG,MAAMN,QAAnB;;AACA,YAAQM,IAAI,CAACC,MAAb;AACE,WAAK,GAAL;AAAU;AACRC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAV,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;AACD;;AACD,WAAK,GAAL;AAAU;AACRS,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;AACD;;AACD;AACED,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA;AAZJ;AAcD,GAxBD,CAwBE,OAAOC,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CA5BD;AA8BA;;;;;;;AAKA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMM,UAAU,GAAGL,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBhB,UAA9B,CAA9B;AACA,QAAMD,QAAQ,GAAGJ,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBjB,QAA9B,CAA5B;AACA,QAAM,CAACkB,aAAD,EAAgBhB,gBAAhB,IAAoCT,KAAK,CAAC0B,QAAN,CAAe,KAAf,CAA1C;AAEA1B,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AACpB,QAAIF,aAAa,KAAK,IAAtB,EAA4B;AAC1BH,MAAAA,QAAQ,CAACrB,OAAO,CAAC2B,MAAR,EAAD,CAAR;AAA4B;;AAC5BN,MAAAA,QAAQ,CAACrB,OAAO,CAAC4B,eAAR,EAAD,CAAR;AAAoC;;AACpCX,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF,GAND,EAMG,CAACM,aAAD,EAAgBH,QAAhB,CANH;AAQA,sBACE;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,OAAO,EAAE,MAAMhB,aAAa,CAACC,QAAD,EAAWC,UAAX,EAAuBC,gBAAvB,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,CAtBD;;AAwBA,eAAeY,MAAf","sourcesContent":["import React from \"react\";\nimport * as actions from \"../../../actions/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst axios = require(\"axios\");\n\n/**\n * Handle the logout http response with backend\n * @param {String} username the username of the user\n * @param {String} magicToken the magictoken used for authentication on websocket connection\n * @param {function} setLogoutSuccess callback function used to set state of bool upon logout\n */\nconst logoutHandler = async (username, magicToken, setLogoutSuccess) => {\n  try {\n    const response = await axios.post(\n      \"/\",\n      JSON.stringify({\n        action: \"logout\",\n        username: username,\n        magic_token: magicToken,\n      })\n    );\n    const data = await response;\n    switch (data.status) {\n      case 200: {\n        console.log(\"200\");\n        setLogoutSuccess(true);\n        break;\n      }\n      case 404: {\n        console.log(\"404\");\n        break;\n      }\n      default:\n        console.log(\"default catch\");\n        break;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/**\n * Component that handles the logout functionality\n * TODO STYLING!!\n * @returns clickable button that will logout the user\n */\nconst Logout = () => {\n  const dispatch = useDispatch();\n  const magicToken = useSelector((state) => state.socketState.magicToken);\n  const username = useSelector((state) => state.socketState.username);\n  const [logoutSuccess, setLogoutSuccess] = React.useState(false);\n\n  React.useEffect(() => {\n    if (logoutSuccess === true) {\n      dispatch(actions.logOut()); /* Reset socketState */\n      dispatch(actions.resetLoginState()) /* Reset loginState  -- this will trigger redirect to login page! */\n      console.log(\"Successfuly logged out!\")\n    }\n  }, [logoutSuccess, dispatch]);\n\n  return (\n    <div\n      className=\"text-white cursor-pointer rounded rounded-full \"\n      onClick={() => logoutHandler(username, magicToken, setLogoutSuccess)}\n    >\n      LOGOUT\n    </div>\n  );\n};\n\nexport default Logout;\n"]},"metadata":{},"sourceType":"module"}