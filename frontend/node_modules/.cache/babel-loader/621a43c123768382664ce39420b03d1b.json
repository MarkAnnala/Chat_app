{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/FriendsList.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport add_friend from \"../../img/add_friend.webp\";\nimport AddFriend from \"./AddFriend\";\nimport * as actions from \"../../actions/actions\";\n/**\n * FriendsList holds the logged in members name and his friends\n * @property username of the logged in user\n * @returns a div containing all friends for the logged in user\n */\n\nconst FriendsList = () => {\n  const [friends, setFriends] = useState([\"Skooben\", \"Travie\", \"Mustafa\"]); //TODO: FIXA VÄNNER\n\n  /* state to toggle modal, state should preferably probably be handled\n   inside modal for scalability and safety. Also refactor to use createPortal when as it is recommended.. */\n\n  const [show, setShow] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const dispatch = useDispatch();\n  const requester = useSelector(state => state.loginState.username);\n  /* Sends a websocket request to add the specific user */\n\n  const handleAddFriend = event => {\n    event.preventDefault();\n    dispatch(actions.addFriend({\n      user_id: username,\n      from: requester\n    }));\n    setUsername(\"\");\n  };\n\n  const handleInputChange = event => {\n    setUsername(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"friends\",\n    className: \"text-white text-xl h-auto border-solid border-b-2 border-gray-700 flex flex-row justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Friends\", /*#__PURE__*/React.createElement(\"img\", {\n    src: add_friend,\n    alt: \"\",\n    className: \"h-6 w-6\",\n    onClick: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(AddFriend, {\n    userInput: username,\n    handleInputChange: handleInputChange,\n    handleAddFriend: handleAddFriend,\n    show: show,\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, friends.map((friend, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-white text-xl hover:bg-gray-500\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \" \", friend);\n  })));\n};\n\nexport default FriendsList;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/FriendsList.js"],"names":["React","useState","useDispatch","useSelector","add_friend","AddFriend","actions","FriendsList","friends","setFriends","show","setShow","username","setUsername","dispatch","requester","state","loginState","handleAddFriend","event","preventDefault","addFriend","user_id","from","handleInputChange","target","value","map","friend","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA;;;;;;AAMA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,CAAD,CAAtC,CADwB,CACkD;;AAC1E;;;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,SAAS,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBL,QAA7B,CAA7B;AAEA;;AACA,QAAMM,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,QAAQ,CAACR,OAAO,CAACe,SAAR,CAAkB;AAAEC,MAAAA,OAAO,EAAEV,QAAX;AAAqBW,MAAAA,IAAI,EAAER;AAA3B,KAAlB,CAAD,CAAR;AACAF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAMA,QAAMW,iBAAiB,GAAIL,KAAD,IAAW;AACnCN,IAAAA,WAAW,CAACM,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,SAAS,EAAC,iGAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKE;AACE,IAAA,GAAG,EAAEtB,UADP;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAC,SAHZ;AAIE,IAAA,OAAO,EAAE,MAAMO,OAAO,CAAC,IAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUK,GAVL,eAYE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEC,QADb;AAEE,IAAA,iBAAiB,EAAEY,iBAFrB;AAGE,IAAA,eAAe,EAAEN,eAHnB;AAIE,IAAA,IAAI,EAAER,IAJR;AAKE,IAAA,OAAO,EAAEC,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,eAqBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACmB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,wBACE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAsD,MAAA,GAAG,EAAEA,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGD,MAFH,CADF;AAMD,GAPA,CADH,CArBF,CADF;AAkCD,CAtDD;;AAwDA,eAAerB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport add_friend from \"../../img/add_friend.webp\";\nimport AddFriend from \"./AddFriend\";\nimport * as actions from \"../../actions/actions\";\n\n/**\n * FriendsList holds the logged in members name and his friends\n * @property username of the logged in user\n * @returns a div containing all friends for the logged in user\n */\n\nconst FriendsList = () => {\n  const [friends, setFriends] = useState([\"Skooben\", \"Travie\", \"Mustafa\"]); //TODO: FIXA VÄNNER\n  /* state to toggle modal, state should preferably probably be handled\n   inside modal for scalability and safety. Also refactor to use createPortal when as it is recommended.. */\n  const [show, setShow] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const dispatch = useDispatch();\n  const requester = useSelector((state) => state.loginState.username);\n\n  /* Sends a websocket request to add the specific user */\n  const handleAddFriend = (event) => {\n    event.preventDefault();\n    dispatch(actions.addFriend({ user_id: username, from: requester }));\n    setUsername(\"\");\n  };\n\n  const handleInputChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  return (\n    <div className=\"flex flex-col ml-2\">\n      <div\n        id=\"friends\"\n        className=\"text-white text-xl h-auto border-solid border-b-2 border-gray-700 flex flex-row justify-between\"\n      >\n        Friends\n        <img\n          src={add_friend}\n          alt=\"\"\n          className=\"h-6 w-6\"\n          onClick={() => setShow(true)}\n        />{\" \"}\n        {/*TODO ON CLICK, lägg till bild  */}\n        <AddFriend\n          userInput={username}\n          handleInputChange={handleInputChange}\n          handleAddFriend={handleAddFriend}\n          show={show}\n          setShow={setShow}\n        ></AddFriend>\n      </div>\n      <div className=\"flex flex-col\">\n        {friends.map((friend, index) => {\n          return (\n            <div className=\"text-white text-xl hover:bg-gray-500\" key={index}>\n              {\" \"}\n              {friend}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FriendsList;\n"]},"metadata":{},"sourceType":"module"}