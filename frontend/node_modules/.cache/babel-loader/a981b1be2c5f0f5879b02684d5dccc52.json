{"ast":null,"code":"/**\n * Contains actions that can be called by a dispatcher\n * \n */\n\n/* action types */\nconst CONNECT = \"CONNECT\";\nconst LOGIN = \"LOGIN\";\nconst RESPONSE = \"RESPONSE\";\nconst REGISTER = \"REGISTER\";\nconst DISCONNECTED = \"DISCONNECTED\";\nconst SET = \"SETSERVER\";\nconst SUCCESS = \"SUCCESS\";\nconst FAILURE = \"FAILURE\";\n/* action functions */\n\nexport function connect(ws) {\n  return {\n    type: CONNECT,\n    payload: ws\n  };\n}\n/* action functions */\n\nexport function disconnected(data) {\n  return {\n    type: DISCONNECTED,\n    payload: data\n  };\n}\nexport function login({\n  values\n}) {\n  return {\n    type: LOGIN,\n    payload: {\n      action: \"login\",\n      username: values.Username,\n      password: values.Password\n    }\n  };\n}\nexport function register({\n  values\n}) {\n  return {\n    type: REGISTER,\n    payload: {\n      action: \"register\",\n      username: values.Username,\n      password: values.Password\n    }\n  };\n}\nexport function loginSuccess({\n  response\n}) {\n  return {\n    type: SUCCESS,\n    payload: response\n  };\n}\nexport function loginFailure({\n  response\n}) {\n  return {\n    type: FAILURE,\n    payload: response\n  };\n}\nexport function response(data) {\n  return {\n    type: RESPONSE,\n    payload: data\n  };\n}\nexport function setServer(server) {\n  return {\n    type: SET,\n    payload: server\n  };\n}","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/actions/actions.js"],"names":["CONNECT","LOGIN","RESPONSE","REGISTER","DISCONNECTED","SET","SUCCESS","FAILURE","connect","ws","type","payload","disconnected","data","login","values","action","username","Username","password","Password","register","loginSuccess","response","loginFailure","setServer","server"],"mappings":"AACA;;;;;AAKC;AACD,MAAMA,OAAO,GAAG,SAAhB;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,GAAG,GAAG,WAAZ;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA;;AACA,OAAO,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AAC1B,SAAO;AAAEC,IAAAA,IAAI,EAAEV,OAAR;AAAiBW,IAAAA,OAAO,EAAEF;AAA1B,GAAP;AACD;AAED;;AACA,OAAO,SAASG,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,SAAO;AAAEH,IAAAA,IAAI,EAAEN,YAAR;AAAsBO,IAAAA,OAAO,EAAEE;AAA/B,GAAP;AACD;AAED,OAAO,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA2B;AAChC,SAAO;AACLL,IAAAA,IAAI,EAAET,KADD;AAELU,IAAAA,OAAO,EAAE;AACPK,MAAAA,MAAM,EAAE,OADD;AAEPC,MAAAA,QAAQ,EAAEF,MAAM,CAACG,QAFV;AAGPC,MAAAA,QAAQ,EAAEJ,MAAM,CAACK;AAHV;AAFJ,GAAP;AAQD;AAED,OAAO,SAASC,QAAT,CAAkB;AAAEN,EAAAA;AAAF,CAAlB,EAA8B;AACnC,SAAO;AACLL,IAAAA,IAAI,EAAEP,QADD;AAELQ,IAAAA,OAAO,EAAE;AACPK,MAAAA,MAAM,EAAE,UADD;AAEPC,MAAAA,QAAQ,EAAEF,MAAM,CAACG,QAFV;AAGPC,MAAAA,QAAQ,EAAEJ,MAAM,CAACK;AAHV;AAFJ,GAAP;AAQD;AAED,OAAO,SAASE,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AACtC,SAAO;AAAEb,IAAAA,IAAI,EAAEJ,OAAR;AAAiBK,IAAAA,OAAO,EAAEY;AAA1B,GAAP;AACD;AACD,OAAO,SAASC,YAAT,CAAsB;AAACD,EAAAA;AAAD,CAAtB,EAAiC;AACtC,SAAO;AAACb,IAAAA,IAAI,EAAEH,OAAP;AAAgBI,IAAAA,OAAO,EAAEY;AAAzB,GAAP;AACD;AAED,OAAO,SAASA,QAAT,CAAkBV,IAAlB,EAAwB;AAC7B,SAAO;AAAEH,IAAAA,IAAI,EAAER,QAAR;AAAkBS,IAAAA,OAAO,EAAEE;AAA3B,GAAP;AACD;AAED,OAAO,SAASY,SAAT,CAAmBC,MAAnB,EAA0B;AAC/B,SAAO;AAAChB,IAAAA,IAAI,EAAEL,GAAP;AAAYM,IAAAA,OAAO,EAAEe;AAArB,GAAP;AACD","sourcesContent":["\n/**\n * Contains actions that can be called by a dispatcher\n * \n */\n\n /* action types */\nconst CONNECT = \"CONNECT\";\nconst LOGIN = \"LOGIN\";\nconst RESPONSE = \"RESPONSE\"\nconst REGISTER = \"REGISTER\";\nconst DISCONNECTED = \"DISCONNECTED\";\nconst SET = \"SETSERVER\";\nconst SUCCESS = \"SUCCESS\";\nconst FAILURE = \"FAILURE\";\n\n/* action functions */\nexport function connect(ws) {\n  return { type: CONNECT, payload: ws };\n}  \n\n/* action functions */\nexport function disconnected(data) {\n  return { type: DISCONNECTED, payload: data };\n}  \n\nexport function login({ values }) {\n  return {\n    type: LOGIN,\n    payload: {\n      action: \"login\",\n      username: values.Username,\n      password: values.Password,\n    },\n  };\n}\n\nexport function register({ values }) {\n  return {\n    type: REGISTER,\n    payload: {\n      action: \"register\",\n      username: values.Username,\n      password: values.Password,\n    },\n  };\n}\n\nexport function loginSuccess({response}){\n  return { type: SUCCESS, payload: response}\n}\nexport function loginFailure({response}){\n  return {type: FAILURE, payload: response}\n}\n\nexport function response(data) {\n  return { type: RESPONSE, payload: data};\n}\n\nexport function setServer(server){\n  return {type: SET, payload: server};\n}\n\n"]},"metadata":{},"sourceType":"module"}