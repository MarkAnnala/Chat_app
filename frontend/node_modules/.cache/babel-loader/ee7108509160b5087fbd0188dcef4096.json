{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/FriendsList/AddFriend.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst axios = require(\"axios\");\n\nasync function friendRequest({\n  setAddSuccessful,\n  userInput,\n  currentFriends,\n  requester,\n  from,\n  setErrorMsg,\n  setShow\n}) {\n  if (userInput !== \"\" && userInput !== requester && !currentFriends.includes(userInput)) {\n    try {\n      const response = await axios.post(\"/\", JSON.stringify({\n        action: \"friend_request\",\n        username: userInput,\n        password: from\n      }));\n      const data = await response;\n\n      switch (data.status) {\n        case 200:\n          {\n            setAddSuccessful(true);\n            setErrorMsg(false);\n            setShow(false);\n            break;\n          }\n\n        case 403:\n          {\n            setErrorMsg(true);\n            break;\n          }\n\n        default:\n          setErrorMsg(true);\n          break;\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMsg(true);\n    }\n  } else {\n    setErrorMsg(true);\n  }\n}\n\nconst AddFriend = ({\n  userInput,\n  handleInputChange,\n  setAddSuccessful,\n  requester,\n  currentFriends,\n  show,\n  setShow,\n  from\n}) => {\n  /* This state is local to the modal and displays error text if failed attempt */\n  const [errorMsg, setErrorMsg] = useState(false);\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n  const monad = useRef();\n  /*Handle click outside createThread modal */\n\n  const handleClick = e => {\n    if (show === true) {\n      if (monad.current.contains(e.target)) {\n        // inside click\n        return;\n      } else {\n        setShow(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addFriend-custom-modal\",\n    ref: monad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addFriend-custom-modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"ADD FRIEND\"), errorMsg ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"AddFriend\",\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Friend request failed! Try something else.\") : /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"AddFriend\",\n    className: \"text-base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \" \", \"Send a friend request by entering their Username.\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"AddFriend\",\n    className: \" flex flex-wrap shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    type: \"text\",\n    onChange: handleInputChange,\n    value: userInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border border-green-700 rounded\",\n    onClick: () => friendRequest({\n      setAddSuccessful,\n      userInput,\n      currentFriends,\n      requester,\n      from,\n      setErrorMsg,\n      setShow\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-red-900 hover:bg-red-700 text-white font-bold py-2 px-4 border border-red-700 rounded\",\n    onClick: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n};\n\nexport default AddFriend;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/FriendsList/AddFriend.js"],"names":["React","useState","useEffect","useRef","axios","require","friendRequest","setAddSuccessful","userInput","currentFriends","requester","from","setErrorMsg","setShow","includes","response","post","JSON","stringify","action","username","password","data","status","error","console","log","AddFriend","handleInputChange","show","errorMsg","document","addEventListener","handleClick","removeEventListener","monad","e","current","contains","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nconst axios = require(\"axios\");\n\nasync function friendRequest({\n  setAddSuccessful,\n  userInput,\n  currentFriends,\n  requester,\n  from,\n  setErrorMsg,\n  setShow,\n}) {\n\n  if (userInput !== \"\" && userInput !== requester && !currentFriends.includes(userInput)) {\n    try {\n      const response = await axios.post(\n        \"/\",\n        JSON.stringify({\n          action: \"friend_request\",\n          username: userInput,\n          password: from,\n        })\n      );\n      const data = await response;\n      switch (data.status) {\n        case 200: {\n          setAddSuccessful(true);\n          setErrorMsg(false);\n          setShow(false);\n          break;\n        }\n        case 403: {\n          setErrorMsg(true);\n          break;\n        }\n        default:\n          setErrorMsg(true);\n          break;\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMsg(true);\n    }\n  } else {\n    setErrorMsg(true);\n  }\n}\n\nconst AddFriend = ({\n  userInput,\n  handleInputChange,\n  setAddSuccessful,\n  requester,\n  currentFriends,\n  show,\n  setShow,\n  from,\n}) => {\n  /* This state is local to the modal and displays error text if failed attempt */\n  const [errorMsg, setErrorMsg] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n\n  const monad = useRef();\n  /*Handle click outside createThread modal */\n  const handleClick = (e) => {\n    if (show === true) {\n      if (monad.current.contains(e.target)) {\n        // inside click\n        return;\n      } else {\n        setShow(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"addFriend-custom-modal\" ref={monad}>\n      <div className=\"addFriend-custom-modal-body\">\n        <h1>ADD FRIEND</h1>\n\n        {errorMsg ? (\n          <label htmlFor=\"AddFriend\" className=\"text-red-600\">\n            Friend request failed! Try something else.\n          </label>\n        ) : (\n          <label htmlFor=\"AddFriend\" className=\"text-base\">\n            {\" \"}\n            Send a friend request by entering their Username.\n          </label>\n        )}\n\n        <input\n          id=\"AddFriend\"\n          className=\" flex flex-wrap shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          type=\"text\"\n          onChange={handleInputChange}\n          value={userInput}\n        ></input>\n        {/* On add, do a friend request and update success state accordingly */}\n        <button\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border border-green-700 rounded\"\n          onClick={() =>\n            friendRequest({\n              setAddSuccessful,\n              userInput,\n              currentFriends,\n              requester,\n              from,\n              setErrorMsg,\n              setShow,\n            })\n          }\n        >\n          Add\n        </button>\n        <button\n          className=\"bg-red-900 hover:bg-red-700 text-white font-bold py-2 px-4 border border-red-700 rounded\"\n          onClick={() => setShow(false)}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default AddFriend;\n"]},"metadata":{},"sourceType":"module"}