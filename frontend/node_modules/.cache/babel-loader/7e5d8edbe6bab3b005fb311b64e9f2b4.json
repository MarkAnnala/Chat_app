{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Upvote/Upvote.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Up from \"../../img/uploading.svg\";\nimport Down from \"../../img/multimedia-option.svg\";\nimport * as actions from \"../../actions/actions\";\n\nconst Upvote = ({\n  comment,\n  index\n}) => {\n  const [votes, setVotes] = useState(comment.rating);\n  const [voteUp, setVoteUp] = useState(false);\n  const [voteDown, setVoteDown] = useState(false);\n  const [inFlight, setInFlight] = useState(true);\n  const dispatch = useDispatch();\n  const [upDisabled, setUpDisabled] = useState(false);\n  const [downDisabled, setDownDisabled] = useState(false);\n  /* sends thread id and index for the comment and if its an upvote or not */\n\n  /*  Added a rating: 0 parameter to each comment*/\n\n  /* What does backend need for information to add upvotes? */\n\n  React.useEffect(() => {\n    if (voteUp === true && inFlight) {\n      setInFlight(false);\n      dispatch(actions.upVote({\n        thread_id: comment.thread_id,\n        index: index.toString()\n      }));\n      setInFlight(true);\n    }\n  }, [voteUp]);\n  React.useEffect(() => {\n    if (voteDown === true && inFlight) {\n      setInFlight(false);\n      dispatch(actions.downVote({\n        thread_id: comment.thread_id,\n        index: index.toString()\n      }));\n      setInFlight(true);\n    }\n  }, [voteDown]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: Up,\n    className: !upDisabled ? \"cursor-pointer h-4 w-4\" : \"h-4 w-4 vote-disabled\",\n    onClick: () => {\n      if (!upDisabled) {\n        setVoteUp(!voteUp);\n        setVoteDown(false);\n        setVotes(votes + 1);\n\n        if (downDisabled) {\n          setDownDisabled(false);\n        } else {\n          setUpDisabled(true);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cursor-default ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, votes), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: Down,\n    className: !downDisabled ? \"cursor-pointer h-4 w-4\" : \"h-4 w-4 vote-disabled\",\n    onClick: () => {\n      if (!downDisabled) {\n        setVoteDown(!voteDown);\n        setVoteUp(false);\n        setVotes(votes - 1);\n\n        if (upDisabled) {\n          setUpDisabled(false);\n        } else {\n          setDownDisabled(true);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Upvote;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Upvote/Upvote.js"],"names":["React","useState","useDispatch","actions","Upvote","comment","index","votes","setVotes","rating","voteUp","setVoteUp","voteDown","setVoteDown","inFlight","setInFlight","dispatch","upDisabled","setUpDisabled","downDisabled","setDownDisabled","useEffect","upVote","thread_id","toString","downVote","Up","Down"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACI,OAAO,CAACI,MAAT,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA6BjB,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AAEA;;AACA;;AACA;;AACAD,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,QAAIX,MAAM,KAAK,IAAX,IAAmBI,QAAvB,EAAiC;AAC/BC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,MAAAA,QAAQ,CACNb,OAAO,CAACmB,MAAR,CAAe;AACbC,QAAAA,SAAS,EAAElB,OAAO,CAACkB,SADN;AAEbjB,QAAAA,KAAK,EAAEA,KAAK,CAACkB,QAAN;AAFM,OAAf,CADM,CAAR;AAMAT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAXD,EAWG,CAACL,MAAD,CAXH;AAaAV,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,QAAIT,QAAQ,KAAK,IAAb,IAAqBE,QAAzB,EAAmC;AACjCC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,MAAAA,QAAQ,CACNb,OAAO,CAACsB,QAAR,CAAiB;AACfF,QAAAA,SAAS,EAAElB,OAAO,CAACkB,SADJ;AAEfjB,QAAAA,KAAK,EAAEA,KAAK,CAACkB,QAAN;AAFQ,OAAjB,CADM,CAAR;AAMAT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAXD,EAWG,CAACH,QAAD,CAXH;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,GAAG,EAAEc,EAFP;AAGE,IAAA,SAAS,EAAE,CAACT,UAAD,GAAc,wBAAd,GAAyC,uBAHtD;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAG,CAACA,UAAJ,EAAe;AACbN,QAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAL,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;;AACA,YAAGY,YAAH,EAAgB;AACdC,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SAFD,MAEK;AACHF,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF;AACF,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAkBE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KADH,CAlBF,eAqBE;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,GAAG,EAAEoB,IAFP;AAGE,IAAA,SAAS,EAAE,CAACR,YAAD,GAAgB,wBAAhB,GAA2C,uBAHxD;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAG,CAACA,YAAJ,EAAiB;AACfN,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAD,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAH,QAAAA,QAAQ,CAACD,KAAK,GAAE,CAAR,CAAR;;AACA,YAAGU,UAAH,EAAc;AACZC,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAFD,MAEK;AACHE,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;AACF,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyCD,CA/ED;;AAiFA,eAAehB,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Up from \"../../img/uploading.svg\";\nimport Down from \"../../img/multimedia-option.svg\";\nimport * as actions from \"../../actions/actions\";\n\nconst Upvote = ({ comment, index }) => {\n  const [votes, setVotes] = useState(comment.rating);\n  const [voteUp, setVoteUp] = useState(false);\n  const [voteDown, setVoteDown] = useState(false);\n  const [inFlight, setInFlight] = useState(true);\n  const dispatch = useDispatch();\n  const [upDisabled, setUpDisabled]= useState(false);\n  const [downDisabled, setDownDisabled] = useState(false);\n\n  /* sends thread id and index for the comment and if its an upvote or not */\n  /*  Added a rating: 0 parameter to each comment*/\n  /* What does backend need for information to add upvotes? */\n  React.useEffect(() => {\n    if (voteUp === true && inFlight) {\n      setInFlight(false);\n      dispatch(\n        actions.upVote({\n          thread_id: comment.thread_id,\n          index: index.toString(),\n        })\n      );\n      setInFlight(true);\n    }\n  }, [voteUp]);\n\n  React.useEffect(() => {\n    if (voteDown === true && inFlight) {\n      setInFlight(false);\n      dispatch(\n        actions.downVote({\n          thread_id: comment.thread_id,\n          index: index.toString(),\n        })\n      );\n      setInFlight(true);\n    }\n  }, [voteDown]);\n\n  return (\n    <div>\n      <img\n        alt=\"\"\n        src={Up}\n        className={!upDisabled ? \"cursor-pointer h-4 w-4\" : \"h-4 w-4 vote-disabled\"}\n        onClick={() => {\n          if(!upDisabled){\n            setVoteUp(!voteUp);\n            setVoteDown(false);\n            setVotes(votes + 1);\n            if(downDisabled){\n              setDownDisabled(false);\n            }else{\n              setUpDisabled(true);\n            }\n          }\n        }}\n      ></img>\n      <div className=\"cursor-default ml-1\">\n        {votes}\n      </div>\n      <img\n        alt=\"\"\n        src={Down}\n        className={!downDisabled ? \"cursor-pointer h-4 w-4\" : \"h-4 w-4 vote-disabled\"}\n        onClick={() => {\n          if(!downDisabled){\n            setVoteDown(!voteDown);\n            setVoteUp(false);\n            setVotes(votes -1);\n            if(upDisabled){\n              setUpDisabled(false);\n            }else{\n              setDownDisabled(true);\n            }\n          }\n        }}\n      ></img>\n    </div>\n  );\n};\n\nexport default Upvote;\n"]},"metadata":{},"sourceType":"module"}