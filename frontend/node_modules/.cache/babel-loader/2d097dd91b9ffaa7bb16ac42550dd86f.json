{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst axios = require(\"axios\"); //axios.get(\"http://localhost:8080/\", { crossdomain: true })\n\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @returns a div containing the form to fill out and its validation\n */\n\n\nconst Login = () => {\n  /* useDispatch from dispatch function from store */\n  const dispatch = useDispatch();\n  const [errorMsg, setErrorMsg] = useState(false);\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.Username) {\n      setErrorMsg(false);\n      errors.Username = \"Required\";\n    }\n\n    if (!values.Password) {\n      setErrorMsg(false);\n      errors.Password = \"Required\";\n      return errors;\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      Username: \"\",\n      Password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      axios.post(\"/\", JSON.stringify({\n        action: \"login\",\n        username: values.Username,\n        password: values.Password\n      })).then(function (response) {\n        console.log(response);\n        /* The response contains: status and a payload data: server/token */\n\n        switch (response.status) {\n          /* Login accepted */\n          case 200:\n            {\n              const data = {\n                response: response.data,\n                username: values.Username\n              };\n              /* Data should contain token & server */\n\n              dispatch(actions.setServer(\"ws://localhost:8080/websocket\"));\n              dispatch(actions.loginSuccess(data));\n              break;\n            }\n\n          case 404:\n            {\n              const data = response.data;\n              dispatch(actions.loginFailure({\n                data\n              }));\n              break;\n            }\n\n          default:\n            alert(\"missing memberid\");\n            break;\n        }\n      }).catch(function (error) {\n        setErrorMsg(true);\n      });\n      /* Use the store reducer to dispatch login actions */\n\n      dispatch(actions.login({\n        values\n      }));\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: \"url(\" + require(\"../../background_night.png\") + \")\"\n    },\n    className: \"flex items-center justify-center h-screen bg-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \" justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Welcome!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Enter your login details to access Chat Up!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Username\",\n    name: \"Username\",\n    type: \"Text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, formik.touched.Username && formik.errors.Username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, formik.errors.Username) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, errorMsg ? /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Login failed! Try something else.\") : null), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Password\",\n    name: \"Password\",\n    type: \"Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, formik.errors.Password) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js"],"names":["React","useState","Link","useFormik","actions","useDispatch","axios","require","Login","dispatch","errorMsg","setErrorMsg","validate","values","errors","Username","Password","formik","initialValues","onSubmit","post","JSON","stringify","action","username","password","then","response","console","log","status","data","setServer","loginSuccess","loginFailure","alert","catch","error","login","backgroundImage","handleSubmit","handleChange","handleBlur","touched"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAAyB,QAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;;AAEA;;;;;;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMW,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAI,CAACD,MAAM,CAACE,QAAZ,EAAsB;AACpBJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,MAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACD;;AAED,QAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;AACpBL,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,MAAAA,MAAM,CAACE,QAAP,GAAkB,UAAlB;AACA,aAAOF,MAAP;AACD;AACF,GAZD;;AAcA,QAAMG,MAAM,GAAGd,SAAS,CAAC;AACvBe,IAAAA,aAAa,EAAE;AAAEH,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADQ;AAEvBJ,IAAAA,QAFuB;AAGvBO,IAAAA,QAAQ,EAAGN,MAAD,IAAY;AACpBP,MAAAA,KAAK,CACFc,IADH,CAEI,GAFJ,EAGIC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,MAAM,EAAE,OADK;AAEbC,QAAAA,QAAQ,EAAEX,MAAM,CAACE,QAFJ;AAGbU,QAAAA,QAAQ,EAAEZ,MAAM,CAACG;AAHJ,OAAf,CAHJ,EASGU,IATH,CASQ,UAAUC,QAAV,EAAoB;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA;;AACA,gBAAQA,QAAQ,CAACG,MAAjB;AACE;AAEA,eAAK,GAAL;AAAU;AACR,oBAAMC,IAAI,GAAG;AACXJ,gBAAAA,QAAQ,EAAEA,QAAQ,CAACI,IADR;AAEXP,gBAAAA,QAAQ,EAAEX,MAAM,CAACE;AAFN,eAAb;AAKA;;AACAN,cAAAA,QAAQ,CAACL,OAAO,CAAC4B,SAAR,CAAkB,+BAAlB,CAAD,CAAR;AACAvB,cAAAA,QAAQ,CAACL,OAAO,CAAC6B,YAAR,CAAqBF,IAArB,CAAD,CAAR;AACA;AACD;;AACD,eAAK,GAAL;AAAU;AACR,oBAAMA,IAAI,GAAGJ,QAAQ,CAACI,IAAtB;AACAtB,cAAAA,QAAQ,CAACL,OAAO,CAAC8B,YAAR,CAAqB;AAAEH,gBAAAA;AAAF,eAArB,CAAD,CAAR;AACA;AACD;;AACD;AACEI,YAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AArBJ;AAuBD,OApCH,EAqCGC,KArCH,CAqCS,UAAUC,KAAV,EAAiB;AACtB1B,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAvCH;AAwCA;;AACAF,MAAAA,QAAQ,CAACL,OAAO,CAACkC,KAAR,CAAc;AAAEzB,QAAAA;AAAF,OAAd,CAAD,CAAR;AACD;AA9CsB,GAAD,CAAxB;AAgDA,sBACE;AACE,IAAA,KAAK,EAAE;AACL0B,MAAAA,eAAe,EAAE,SAAShC,OAAO,CAAC,4BAAD,CAAhB,GAAiD;AAD7D,KADT;AAIE,IAAA,SAAS,EAAC,qDAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,QAAQ,EAAEU,MAAM,CAACuB,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDALF,eAOE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,IAAA,SAAS,EAAC,4HADZ;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAEvB,MAAM,CAACwB,YALnB;AAME,IAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,IAAA,KAAK,EAAEzB,MAAM,CAACJ,MAAP,CAAcE,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,MAAM,CAAC0B,OAAP,CAAe5B,QAAf,IAA2BE,MAAM,CAACH,MAAP,CAAcC,QAAzC,gBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BE,MAAM,CAACH,MAAP,CAAcC,QAA7C,CADD,GAEG,IAHN,CAhBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,gBACP;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADO,GAIL,IALN,CArBF,eA4BE;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF,eAkCE;AACE,IAAA,SAAS,EAAC,4HADZ;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAEO,MAAM,CAACwB,YALnB;AAME,IAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,IAAA,KAAK,EAAEzB,MAAM,CAACJ,MAAP,CAAcG,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,eA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAAC0B,OAAP,CAAe3B,QAAf,IAA2BC,MAAM,CAACH,MAAP,CAAcE,QAAzC,gBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,MAAM,CAACH,MAAP,CAAcE,QAA7C,CADD,GAEG,IAHN,CA3CF,eAgDE;AACE,IAAA,SAAS,EAAC,2GADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhDF,eAsDE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,SAAS,EAAC,wHAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtDF,CAPF,CANF,CADF;AA+ED,CAjJD;;AAmJA,eAAeR,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik} from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst axios = require(\"axios\");\n\n//axios.get(\"http://localhost:8080/\", { crossdomain: true })\n\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @returns a div containing the form to fill out and its validation\n */\nconst Login = () => {\n  /* useDispatch from dispatch function from store */\n  const dispatch = useDispatch();\n  const [errorMsg, setErrorMsg] = useState(false);\n  const validate = (values) => {\n    const errors = {};\n    if (!values.Username) {\n      setErrorMsg(false);\n      errors.Username = \"Required\";\n    }\n\n    if (!values.Password) {\n      setErrorMsg(false);\n      errors.Password = \"Required\";\n      return errors;\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: { Username: \"\", Password: \"\" },\n    validate,\n    onSubmit: (values) => {\n      axios\n        .post(\n          \"/\",\n          JSON.stringify({\n            action: \"login\",\n            username: values.Username,\n            password: values.Password,\n          })\n        )\n        .then(function (response) {\n          console.log(response);\n\n          /* The response contains: status and a payload data: server/token */\n          switch (response.status) {\n            /* Login accepted */\n\n            case 200: {\n              const data = {\n                response: response.data,\n                username: values.Username,\n              };\n\n              /* Data should contain token & server */\n              dispatch(actions.setServer(\"ws://localhost:8080/websocket\"));\n              dispatch(actions.loginSuccess(data));\n              break;\n            }\n            case 404: {\n              const data = response.data;\n              dispatch(actions.loginFailure({ data }));\n              break;\n            }\n            default:\n              alert(\"missing memberid\");\n              break;\n          }\n        })\n        .catch(function (error) {\n          setErrorMsg(true);\n        });\n      /* Use the store reducer to dispatch login actions */\n      dispatch(actions.login({ values }));\n    },\n  });\n  return (\n    <div\n      style={{\n        backgroundImage: \"url(\" + require(\"../../background_night.png\") + \")\",\n      }}\n      className=\"flex items-center justify-center h-screen bg-scroll\"\n    >\n      <form\n        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \"\n        onSubmit={formik.handleSubmit}\n      >\n        <p className=\" justify-center\">Welcome!</p>\n        <p>Enter your login details to access Chat Up!</p>\n\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Username\"\n            name=\"Username\"\n            type=\"Text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Username}\n          ></input>\n          <div>\n            {formik.touched.Username && formik.errors.Username ? (\n              <div className=\"text-red-600\">{formik.errors.Username}</div>\n            ) : null}\n          </div>\n          <div>\n            {errorMsg ? (\n              <label className=\"text-red-600\">\n                Login failed! Try something else.\n              </label>\n            ) : null}\n          </div>\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Password\"\n          >\n            Password\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Password\"\n            name=\"Password\"\n            type=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Password}\n          ></input>\n          <div>\n            {formik.touched.Password && formik.errors.Password ? (\n              <div className=\"text-red-600\">{formik.errors.Password}</div>\n            ) : null}\n          </div>\n          <button\n            className=\"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"submit\"\n          >\n            Login\n          </button>\n          <Link\n            to=\"/register\"\n            className=\" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"button\"\n          >\n            Register\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}