{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/LandingPage/LandingPage.js\";\nimport React from \"react\";\nimport \"../../assets/main.css\";\nimport SideDisplayList from \"../SideDisplayList/SideDisplayList\";\nimport FocusedView from \"../FocusedView/FocusedView\";\nimport InfoDisplayList from \"../InfoDisplayList/InfoDisplayList\";\nimport { useSelector } from \"react-redux\";\n/**\n * LandingPage holds the layout design grid of the app. Also manages\n * the routing and display of everything inside SideDisplayList, InfoDisplayList and FocusedView\n *\n * @returns a div containing the SideDisplayList, InfoDisplayList and FocusedView components\n */\n\nconst LandingPage = () => {\n  /* state to check what chat we are currently focusing on */\n  const [focusedChat, setFocusedChat] = React.useState(null);\n  /*state to check what thread we are focuing on */\n\n  const [focusedThread, setFocusedThread] = React.useState(null);\n  /* callback function for getting the id of the direct message div that we are clicking on */\n\n  const handleFocusedChat = event => {\n    setFocusedChat(event.target.id);\n  };\n  /*callback for focusing a thread */\n\n\n  const handleFocusedThread = event => {\n    console.log(event.target);\n    setFocusedThread(event.target.id);\n  };\n\n  const [server, setServer] = React.useState({}); //server object from redux\n\n  const serverObject = useSelector(state => state.socketState.server);\n  React.useEffect(() => {\n    if (serverObject !== null) {\n      setServer(serverObject);\n    }\n  }, [serverObject]);\n  /* state to check what page we are focusing on - some server or the home page*/\n\n  /* Focusing on Home always on start*/\n\n  const [focusedPage, setFocusedPage] = React.useState(\"Home\");\n  /* callback function for getting the id of the page that we are clicking on */\n\n  const handleFocusedPage = event => {\n    setFocusedPage(event.target.id);\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /**\n     *  The styling is made up of Tailwind css classes\n     *  To change the width of components inside the div search for grid-cols-custom in tailwind.js and change corresponding attr.\n     */\n    React.createElement(\"div\", {\n      className: \"grid grid-cols-custom h-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SideDisplayList, {\n      handleFocusedPage: handleFocusedPage,\n      server: server,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(InfoDisplayList, {\n      handleFocusedChat: handleFocusedChat,\n      focusedPage: focusedPage,\n      handleFocusedThread: handleFocusedThread,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(FocusedView, {\n      focusedChat: focusedChat,\n      focusedPage: focusedPage,\n      focusedThread: focusedThread,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/LandingPage/LandingPage.js"],"names":["React","SideDisplayList","FocusedView","InfoDisplayList","useSelector","LandingPage","focusedChat","setFocusedChat","useState","focusedThread","setFocusedThread","handleFocusedChat","event","target","id","handleFocusedThread","console","log","server","setServer","serverObject","state","socketState","useEffect","focusedPage","setFocusedPage","handleFocusedPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA;;;;;;;AAMA,MAAMC,WAAW,GAAG,MAAM;AACxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAtC;AAEA;;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,KAAK,CAACQ,QAAN,CAAe,IAAf,CAA1C;AAGA;;AACA,QAAMG,iBAAiB,GAAIC,KAAD,IAAW;AACnCL,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFD;AAIA;;;AACA,QAAMC,mBAAmB,GAAIH,KAAD,IAAW;AACrCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,MAAlB;AACAH,IAAAA,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAhB;AAED,GAJD;;AAKA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBnB,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B,CAnBwB,CAqBxB;;AACA,QAAMY,YAAY,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBJ,MAA5B,CAAhC;AAEAlB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB,QAAIH,YAAY,KAAK,IAArB,EAA2B;AACzBD,MAAAA,SAAS,CAACC,YAAD,CAAT;AACD;AACF,GAJD,EAIG,CAACA,YAAD,CAJH;AAMA;;AACA;;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCzB,KAAK,CAACQ,QAAN,CAAe,MAAf,CAAtC;AAEA;;AACA,QAAMkB,iBAAiB,GAAId,KAAD,IAAW;AACnCa,IAAAA,cAAc,CAACb,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFD;;AAIA;AAAA;;AACE;;;;AAIA;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,iBAAiB,EAAEY,iBAApC;AAAuD,MAAA,MAAM,EAAER,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,eAAD;AAAiB,MAAA,iBAAiB,EAAEP,iBAApC;AAAuD,MAAA,WAAW,EAAEa,WAApE;AACA,MAAA,mBAAmB,EAAIT,mBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAKE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAET,WAA1B;AAAuC,MAAA,WAAW,EAAEkB,WAApD;AAAiE,MAAA,aAAa,EAAGf,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF;AALF;AAaD,CApDD;;AAsDA,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\nimport \"../../assets/main.css\";\nimport SideDisplayList from \"../SideDisplayList/SideDisplayList\";\nimport FocusedView from \"../FocusedView/FocusedView\";\nimport InfoDisplayList from \"../InfoDisplayList/InfoDisplayList\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * LandingPage holds the layout design grid of the app. Also manages\n * the routing and display of everything inside SideDisplayList, InfoDisplayList and FocusedView\n *\n * @returns a div containing the SideDisplayList, InfoDisplayList and FocusedView components\n */\nconst LandingPage = () => {\n  /* state to check what chat we are currently focusing on */\n  const [focusedChat, setFocusedChat] = React.useState(null);\n  \n  /*state to check what thread we are focuing on */\n  const [focusedThread, setFocusedThread] = React.useState(null);\n  \n\n  /* callback function for getting the id of the direct message div that we are clicking on */\n  const handleFocusedChat = (event) => {\n    setFocusedChat(event.target.id);\n  };\n\n  /*callback for focusing a thread */ \n  const handleFocusedThread = (event) => {\n    console.log(event.target);\n    setFocusedThread(event.target.id);\n  \n  }\n  const [server, setServer] = React.useState({});\n\n  //server object from redux\n  const serverObject = useSelector(state => state.socketState.server);\n\n  React.useEffect(() => {\n    if (serverObject !== null) {\n      setServer(serverObject);\n    }\n  }, [serverObject]);\n\n  /* state to check what page we are focusing on - some server or the home page*/\n  /* Focusing on Home always on start*/\n  const [focusedPage, setFocusedPage] = React.useState(\"Home\");\n\n  /* callback function for getting the id of the page that we are clicking on */\n  const handleFocusedPage = (event) => {\n    setFocusedPage(event.target.id)\n  };\n\n  return (\n    /**\n     *  The styling is made up of Tailwind css classes\n     *  To change the width of components inside the div search for grid-cols-custom in tailwind.js and change corresponding attr.\n     */\n    <div className=\"grid grid-cols-custom h-screen\">\n      <SideDisplayList handleFocusedPage={handleFocusedPage} server={server}/>\n      <InfoDisplayList handleFocusedChat={handleFocusedChat} focusedPage={focusedPage} \n      handleFocusedThread = {handleFocusedThread}  />\n\n      <FocusedView focusedChat={focusedChat} focusedPage={focusedPage} focusedThread ={focusedThread} />\n    </div>\n  );\n};\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}