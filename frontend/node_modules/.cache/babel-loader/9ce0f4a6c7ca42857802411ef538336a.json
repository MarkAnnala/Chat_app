{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/InfoDisplayList.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InformationHeader from './InformationHeader/InformationHeader';\nimport FriendsList from './FriendsList/FriendsList';\nimport ServerInformation from './InformationHeader/ServerInformation';\nimport ThreadList from './ThreadList/ThreadList';\nimport MessagesList from './MessagesList/MessagesList';\n/**\n * contains everything that needs to be displayed in the InfoDisplayList \n *\n * @property {function} handleFocusedChat callback function used to get the target of what we are clicking on in MessagesList\n * @property {String} focusedPage - a string used to check what page we are focusing on\n * @property {String} focusedChat - a string used to check what chat we are focusing on\n * @property {function} handleFocusedThread callback function used to get the target of what we are clicking on in ThreadList\n * returns a div containing the component InformationHeader, FriendsList and MessagesList\n */\n\nconst InfoDisplayList = ({\n  handleFocusedChat,\n  focusedPage,\n  focusedChat,\n  handleFocusedThread\n}) => {\n  /* get the logged in  username from redux store */\n  const username = useSelector(state => state.socketState.username);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#2C2F33\"\n    },\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InformationHeader, {\n    username: username,\n    focusedPage: focusedPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), focusedPage === \"Home\" ? /*#__PURE__*/React.createElement(FriendsList, {\n    myUsername: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(ServerInformation, {\n    focusedPage: focusedPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 79\n    }\n  }), focusedPage === \"Home\" ? /*#__PURE__*/React.createElement(MessagesList, {\n    username: username,\n    focusedChat: focusedChat,\n    handleFocusedChat: handleFocusedChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(ThreadList, {\n    handleFocusedThread: handleFocusedThread,\n    username: username,\n    focusedPage: focusedPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 147\n    }\n  }));\n};\n\nexport default InfoDisplayList;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/InfoDisplayList.js"],"names":["React","useDispatch","useSelector","InformationHeader","FriendsList","ServerInformation","ThreadList","MessagesList","InfoDisplayList","handleFocusedChat","focusedPage","focusedChat","handleFocusedThread","username","state","socketState","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAGA;;;;;;;;;;AASA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,iBAAD;AAAoBC,EAAAA,WAApB;AAAiCC,EAAAA,WAAjC;AAA8CC,EAAAA;AAA9C,CAAD,KAAwE;AAE5F;AACA,QAAMC,QAAQ,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,QAA9B,CAA5B;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,eAAe,EAAE;AAAlB,KAAZ;AAA0C,IAAA,SAAS,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAIH,QAA/B;AAAyC,IAAA,WAAW,EAAEH,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKA,WAAW,KAAK,MAAhB,gBAAyB,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEG,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,gBAAiE,oBAAC,iBAAD;AAAmB,IAAA,WAAW,EAAEH,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtE,EAGKA,WAAW,KAAK,MAAhB,gBAAyB,oBAAC,YAAD;AAAe,IAAA,QAAQ,EAAIG,QAA3B;AAAqC,IAAA,WAAW,EAAEF,WAAlD;AAA+D,IAAA,iBAAiB,EAAIF,iBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,gBAAqI,oBAAC,UAAD;AAAY,IAAA,mBAAmB,EAAEG,mBAAjC;AAAsD,IAAA,QAAQ,EAAIC,QAAlE;AAA4E,IAAA,WAAW,EAAEH,WAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH1I,CADJ;AAOH,CAZD;;AAeA,eAAeF,eAAf","sourcesContent":["import React  from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InformationHeader from './InformationHeader/InformationHeader';\nimport FriendsList from './FriendsList/FriendsList';\nimport ServerInformation from './InformationHeader/ServerInformation';\nimport ThreadList from './ThreadList/ThreadList';\nimport MessagesList from './MessagesList/MessagesList';\n\n\n/**\n * contains everything that needs to be displayed in the InfoDisplayList \n *\n * @property {function} handleFocusedChat callback function used to get the target of what we are clicking on in MessagesList\n * @property {String} focusedPage - a string used to check what page we are focusing on\n * @property {String} focusedChat - a string used to check what chat we are focusing on\n * @property {function} handleFocusedThread callback function used to get the target of what we are clicking on in ThreadList\n * returns a div containing the component InformationHeader, FriendsList and MessagesList\n */\nconst InfoDisplayList = ({handleFocusedChat, focusedPage, focusedChat, handleFocusedThread}) => {\n\n    /* get the logged in  username from redux store */\n    const username = useSelector((state) => state.socketState.username);\n\n    return (\n        <div style={{backgroundColor: \"#2C2F33\"}} className=\"p-1\">\n            <InformationHeader username = {username} focusedPage={focusedPage}/>\n            {focusedPage === \"Home\" ? <FriendsList myUsername={username} /> : <ServerInformation focusedPage={focusedPage} />}\n            {focusedPage === \"Home\" ? <MessagesList  username = {username} focusedChat={focusedChat} handleFocusedChat = {handleFocusedChat} /> : <ThreadList handleFocusedThread={handleFocusedThread} username = {username} focusedPage={focusedPage}/> }\n        </div>\n    )\n}\n\n\nexport default InfoDisplayList;\n"]},"metadata":{},"sourceType":"module"}