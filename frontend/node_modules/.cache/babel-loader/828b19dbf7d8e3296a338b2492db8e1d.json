{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/AddFriend.js\";\nimport React, { useState } from \"react\";\n\nconst axios = require(\"axios\");\n\nasync function friendRequest({\n  setAddSuccessful,\n  userInput,\n  from,\n  setErrorMsg\n}) {\n  if (userInput !== \"\") {\n    try {\n      const response = await axios.post(\"/\", JSON.stringify({\n        action: \"friend_request\",\n        username: userInput,\n        password: from\n      }));\n      const data = await response;\n\n      switch (data.status) {\n        case 200:\n          {\n            setAddSuccessful(true);\n            setErrorMsg(false);\n            break;\n          }\n\n        case 404:\n          {\n            setErrorMsg(true);\n            break;\n          }\n\n        default:\n          setErrorMsg(true);\n          break;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    setErrorMsg(true);\n  }\n}\n\nconst AddFriend = ({\n  userInput,\n  handleInputChange,\n  setAddSuccessful,\n  show,\n  setShow,\n  from\n}) => {\n  /* This state is local to the modal and displays error text if failed attempt */\n  const [errorMsg, setErrorMsg] = useState(false);\n  const content = show && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addFriend-custom-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addFriend-custom-modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"ADD FRIEND\"), errorMsg ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"AddFriend\",\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \" \", \"Something went wrong! Try something else.\") : /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"AddFriend\",\n    className: \"text-base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \" \", \"Send a friend request by entering their Username.\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"AddFriend\",\n    className: \" flex flex-wrap shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    type: \"text\",\n    onChange: handleInputChange,\n    value: userInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border border-green-700 rounded\",\n    onClick: () => friendRequest({\n      setAddSuccessful,\n      userInput,\n      from,\n      setErrorMsg\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-red-900 hover:bg-red-700 text-white font-bold py-2 px-4 border border-red-700 rounded\",\n    onClick: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Close\")));\n  return content;\n};\n\nexport default AddFriend;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/AddFriend.js"],"names":["React","useState","axios","require","friendRequest","setAddSuccessful","userInput","from","setErrorMsg","response","post","JSON","stringify","action","username","password","data","status","error","console","log","AddFriend","handleInputChange","show","setShow","errorMsg","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nconst axios = require(\"axios\");\n\nasync function friendRequest({\n  setAddSuccessful,\n  userInput,\n  from,\n  setErrorMsg,\n}) {\n  if (userInput !== \"\") {\n    try {\n      const response = await axios.post(\n        \"/\",\n        JSON.stringify({\n          action: \"friend_request\",\n          username: userInput,\n          password: from,\n        })\n      );\n      const data = await response;\n      switch (data.status) {\n        case 200: {\n          setAddSuccessful(true);\n          setErrorMsg(false);\n          break;\n        }\n        case 404: {\n          setErrorMsg(true);\n          break;\n        }\n        default:\n          setErrorMsg(true);\n          break;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    setErrorMsg(true);\n  }\n}\n\nconst AddFriend = ({\n  userInput,\n  handleInputChange,\n  setAddSuccessful,\n  show,\n  setShow,\n  from,\n}) => {\n  /* This state is local to the modal and displays error text if failed attempt */\n  const [errorMsg, setErrorMsg] = useState(false);\n\n  const content = show && (\n      <div className=\"addFriend-custom-modal\">\n        <div className=\"addFriend-custom-modal-body\">\n          <h1>ADD FRIEND</h1>\n\n          {errorMsg ? (\n            <label htmlFor=\"AddFriend\" className=\"text-red-600\">\n              {\" \"}\n              Something went wrong! Try something else.\n            </label>\n          ) : (\n            <label htmlFor=\"AddFriend\" className=\"text-base\">\n              {\" \"}\n              Send a friend request by entering their Username.\n            </label>\n          )}\n\n          <input\n            id=\"AddFriend\"\n            className=\" flex flex-wrap shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            type=\"text\"\n            onChange={handleInputChange}\n            value={userInput}\n          ></input>\n          {/* On add, do a friend request and update success state accordingly */}\n          <button\n            className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border border-green-700 rounded\"\n            onClick={() =>\n              friendRequest({ setAddSuccessful, userInput, from, setErrorMsg })\n            }\n          >\n            Add\n          </button>\n          <button\n            className=\"bg-red-900 hover:bg-red-700 text-white font-bold py-2 px-4 border border-red-700 rounded\"\n            onClick={() => setShow(false)}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n\n  );\n\n  return content;\n};\nexport default AddFriend;\n"]},"metadata":{},"sourceType":"module"}