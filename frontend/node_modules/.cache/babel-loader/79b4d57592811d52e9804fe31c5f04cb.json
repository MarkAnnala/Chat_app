{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/MessagesList.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport add_chat from \"../../img/add_chat.png\";\nimport StartChat from \"./StartChat\";\nimport { useSelector } from \"react-redux\";\n/**\n * contains the list of available direct messages that we can chat in\n *\n * @param {function} callback function used to get the target of what we are clicking on\n * @property {string} username  username of the logged in user\n * returns a div containing all direct messages\n */\n\nconst MessagesList = ({\n  handleFocusedChat,\n  username\n}) => {\n  /* Get friendslist from redux store */\n  const friends = useSelector(state => state.socketState.listOfFriends);\n  /* TODO actualy use the chat names from redux store */\n\n  const [chats, setChats] = useState([\"Skooben\", \"Grabbarna Grus\"]);\n  /* Determens if we're showing the add chat modal */\n\n  const [showAddChat, setShowAddChat] = useState(false);\n  /*On mount, add event listerner for click outside ref addChatModal*/\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n  /*Handle click outside addChatModal */\n\n  const handleClick = e => {\n    if (addChatModal.current.contains(e.target)) {\n      // inside click\n      return;\n    } else {\n      setShowAddChat(false);\n    }\n  };\n  /*Keep track of the modal */\n\n\n  const addChatModal = useRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messagesList\",\n    className: \"mt-5 text-white text-xl h-auto border-solid border-b-2 border-gray-700 flex flex-row justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Direct Messages\", /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => {\n      setShowAddChat(true);\n    },\n    src: add_chat,\n    alt: \"Create a new chat!\",\n    className: \"h-6 w-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: addChatModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, showAddChat ? /*#__PURE__*/React.createElement(StartChat, {\n    setShowAddChat: setShowAddChat,\n    username: username,\n    friends: friends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 47\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, chats.map((chat, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-white text-xl hover:bg-gray-500\",\n      onClick: handleFocusedChat,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, chat);\n  })));\n};\n\nexport default MessagesList;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/MessagesList.js"],"names":["React","useState","useEffect","useRef","add_chat","StartChat","useSelector","MessagesList","handleFocusedChat","username","friends","state","socketState","listOfFriends","chats","setChats","showAddChat","setShowAddChat","document","addEventListener","handleClick","removeEventListener","e","addChatModal","current","contains","target","map","chat","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA;;;;;;;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAD,KAAqC;AAEtD;AACA,QAAMC,OAAO,GAAGJ,WAAW,CACxBK,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,aADJ,CAA3B;AAIF;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAC,SAAD,EAAY,gBAAZ,CAAD,CAAlC;AAEA;;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAK;AACdgB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCC,WAAvC;AACA,WAAO,MAAK;AACVF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0CD,WAA1C;AACD,KAFD;AAGA,GALQ,EAKN,EALM,CAAT;AAOA;;AACA,QAAMA,WAAW,GAAGE,CAAC,IAAI;AACvB,QAAIC,YAAY,CAACC,OAAb,CAAqBC,QAArB,CAA8BH,CAAC,CAACI,MAAhC,CAAJ,EAA6C;AAC3C;AACA;AACD,KAHD,MAII;AACFT,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GARD;AASA;;;AACA,QAAMM,YAAY,GAAGpB,MAAM,EAA3B;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,SAAS,EAAC,sGAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAIE;AAAK,IAAA,OAAO,EAAG,MAAM;AAACc,MAAAA,cAAc,CAAC,IAAD,CAAd;AAAqB,KAA3C;AAA6C,IAAA,GAAG,EAAEb,QAAlD;AAA4D,IAAA,GAAG,EAAC,oBAAhE;AAAqF,IAAA,SAAS,EAAC,SAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE;AAAK,IAAA,GAAG,EAAGmB,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BP,WAAW,gBAAG,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAIC,cAA7B;AAA6C,IAAA,QAAQ,EAAER,QAAvD;AAAiE,IAAA,OAAO,EAAGC,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2F,IAAhI,CAPF,eAQE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,wBACE;AACE,MAAA,SAAS,EAAC,sCADZ;AAEE,MAAA,OAAO,EAAErB,iBAFX;AAGE,MAAA,GAAG,EAAEqB,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,IALH,CADF;AASD,GAVA,CADH,CARF,CADF;AAwBD,CA3DD;;AA6DA,eAAerB,YAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport add_chat from \"../../img/add_chat.png\";\nimport StartChat from \"./StartChat\";\nimport {useSelector} from \"react-redux\"\n\n/**\n * contains the list of available direct messages that we can chat in\n *\n * @param {function} callback function used to get the target of what we are clicking on\n * @property {string} username  username of the logged in user\n * returns a div containing all direct messages\n */\nconst MessagesList = ({ handleFocusedChat, username }) => {\n\n    /* Get friendslist from redux store */\n    const friends = useSelector(\n      (state) => state.socketState.listOfFriends\n    );\n\n  /* TODO actualy use the chat names from redux store */\n  const [chats, setChats] = useState([\"Skooben\", \"Grabbarna Grus\"]);\n\n  /* Determens if we're showing the add chat modal */\n  const [showAddChat, setShowAddChat] = useState(false);\n\n  /*On mount, add event listerner for click outside ref addChatModal*/ \n  useEffect(()=> {\n   document.addEventListener('mousedown', handleClick);\n   return () =>{\n     document.removeEventListener('mousedown', handleClick);\n   }\n  }, []);\n\n  /*Handle click outside addChatModal */\n  const handleClick = e => {\n    if (addChatModal.current.contains(e.target)) {\n      // inside click\n      return;\n    }\n    else{\n      setShowAddChat(false);\n    }\n  };  \n  /*Keep track of the modal */\n  const addChatModal = useRef();\n\n\n  return (\n    <div className=\"flex flex-col ml-2\">\n      <div\n        id=\"messagesList\"\n        className=\"mt-5 text-white text-xl h-auto border-solid border-b-2 border-gray-700 flex flex-row justify-between\">\n        Direct Messages\n        <img onClick ={() => {setShowAddChat(true)}} src={add_chat} alt=\"Create a new chat!\" className=\"h-6 w-6\"/>\n      </div>\n      <div ref ={addChatModal}>{showAddChat ? <StartChat setShowAddChat = {setShowAddChat} username={username} friends ={friends}/> : null}</div>\n      <div className=\"flex flex-col\">\n        {chats.map((chat, index) => {\n          return (\n            <div\n              className=\"text-white text-xl hover:bg-gray-500\"\n              onClick={handleFocusedChat}\n              key={index}\n            >\n              {chat}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesList;\n"]},"metadata":{},"sourceType":"module"}