{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/ThreadContainer/OriginalPost.js\";\nimport React from \"react\";\n/**\n * OriginalPost is the first post of a Thread\n * @property {string} focusedThread the name of the thread that we are currently focusing on\n * @property {function} resetFocusedThread callback for resetting which thread we are focusing on \n * @returns a div containing all the information regarding the original post\n */\n\nconst OriginalPost = ({\n  thread,\n  resetFocusedThread\n}) => {\n  console.log(thread);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: resetFocusedThread,\n    className: \"rounded border-2 border-solid border-black w-full p-2 mt-2 flex flex-col shadow-inner shadow-lg bg-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" text-3xl text-white pl-2 w-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, thread.rootPost.rootHeader), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-xs text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Posted by: \", thread.username, \" on \", thread.timestamp)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-xl text-white ml-5 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, thread.rootPost.rootComment));\n};\n\nexport default OriginalPost;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/ThreadContainer/OriginalPost.js"],"names":["React","OriginalPost","thread","resetFocusedThread","console","log","rootPost","rootHeader","username","timestamp","rootComment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;AAMA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAoC;AAEvDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,sBACI;AAAK,IAAA,OAAO,EAAEC,kBAAd;AAAkC,IAAA,SAAS,EAAC,6GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACI,QAAP,CAAgBC,UADnB,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcL,MAAM,CAACM,QADrB,UACmCN,MAAM,CAACO,SAD1C,CAJF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAACI,QAAP,CAAgBI,WADnB,CATF,CADJ;AAeD,CAlBD;;AAoBA,eAAeT,YAAf","sourcesContent":["import React from \"react\";\n\n/**\n * OriginalPost is the first post of a Thread\n * @property {string} focusedThread the name of the thread that we are currently focusing on\n * @property {function} resetFocusedThread callback for resetting which thread we are focusing on \n * @returns a div containing all the information regarding the original post\n */\nconst OriginalPost = ({ thread, resetFocusedThread }) => {\n\n  console.log(thread);\n  return (\n      <div onClick={resetFocusedThread} className=\"rounded border-2 border-solid border-black w-full p-2 mt-2 flex flex-col shadow-inner shadow-lg bg-gray-700\">\n        <div className=\"flex flex-row justify-between\">\n          <div className=\" text-3xl text-white pl-2 w-auto\">\n            {thread.rootPost.rootHeader}\n          </div>\n          <div className=\"text-xs text-white\">\n            Posted by: {thread.username} on {thread.timestamp}\n          </div>\n        </div>\n        <div className=\"text-xl text-white ml-5 \">\n          {thread.rootPost.rootComment}\n        </div>\n      </div>\n  );\n};\n\nexport default OriginalPost;\n"]},"metadata":{},"sourceType":"module"}