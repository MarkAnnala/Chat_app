{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst axios = require(\"axios\"); //axios.get(\"http://localhost:8080/\", { crossdomain: true })\n\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @property history is passed on due to Login being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\n\n\nconst Login = ({\n  history\n}) => {\n  /* useDispatch from dispatch function from store */\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      Username: \"\",\n      Password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      axios.post(\"//www.localhost:8080/\", JSON.stringify({\n        action: \"login\",\n        username: values.Username,\n        Password: values.Password\n      })).then(function (response) {\n        console.log(response);\n        /* The response contains: status and a payload data: server/token */\n\n        switch (response.status) {\n          /* Login accepted */\n          case 200:\n            {\n              const data = response.data;\n              /* Data should contain token & server */\n\n              dispatch(actions.loginSuccess({\n                data\n              }));\n              dispatch(actions.setServer({\n                data\n              }));\n              break;\n            }\n\n          case 404:\n            {\n              const data = response.data;\n              dispatch(actions.loginFailure({\n                data\n              }));\n              break;\n            }\n\n          default:\n            alert(\"missing memberid\");\n            break;\n        }\n\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      /* Use the store reducer to dispatch login actions */\n\n      dispatch(actions.login({\n        values\n      }));\n      /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n\n      history.push(\"/start\");\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: \"url(\" + require(\"../../background_night.png\") + \")\"\n    },\n    className: \"flex items-center justify-center h-screen bg-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \" justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Welcome!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Enter your login details to access Chat Up!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Username\",\n    name: \"Username\",\n    type: \"Text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, formik.touched.Username && formik.errors.Username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, formik.errors.Username) : null), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Password\",\n    name: \"Password\",\n    type: \"Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, formik.errors.Password) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js"],"names":["React","Link","useFormik","actions","useDispatch","axios","require","validate","values","errors","Username","Password","Login","history","dispatch","formik","initialValues","onSubmit","post","JSON","stringify","action","username","then","response","console","log","status","data","loginSuccess","setServer","loginFailure","alert","catch","error","login","push","backgroundImage","handleSubmit","handleChange","handleBlur","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CACA;;;AACA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,QAAZ,EAAsB;AACpBD,IAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACD;;AAED,MAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;AACpBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,UAAlB;AACA,WAAOF,MAAP;AACD;AACF,CAVD;AAYA;;;;;;;;AAMA,MAAMG,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,MAAM,GAAGb,SAAS,CAAC;AACvBc,IAAAA,aAAa,EAAE;AAAEN,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADQ;AAEvBJ,IAAAA,QAFuB;AAGvBU,IAAAA,QAAQ,EAAGT,MAAD,IAAY;AACpBH,MAAAA,KAAK,CACFa,IADH,CAEI,uBAFJ,EAGIC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,MAAM,EAAE,OADK;AAEbC,QAAAA,QAAQ,EAAEd,MAAM,CAACE,QAFJ;AAGbC,QAAAA,QAAQ,EAAEH,MAAM,CAACG;AAHJ,OAAf,CAHJ,EASGY,IATH,CASQ,UAAUC,QAAV,EAAoB;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;AACA,gBAAQA,QAAQ,CAACG,MAAjB;AACE;AAEA,eAAK,GAAL;AAAU;AACR,oBAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAtB;AAEA;;AACAd,cAAAA,QAAQ,CAACX,OAAO,CAAC0B,YAAR,CAAqB;AAAED,gBAAAA;AAAF,eAArB,CAAD,CAAR;AACAd,cAAAA,QAAQ,CAACX,OAAO,CAAC2B,SAAR,CAAkB;AAAEF,gBAAAA;AAAF,eAAlB,CAAD,CAAR;AACA;AACD;;AACD,eAAK,GAAL;AAAU;AACR,oBAAMA,IAAI,GAAGJ,QAAQ,CAACI,IAAtB;AACAd,cAAAA,QAAQ,CAACX,OAAO,CAAC4B,YAAR,CAAqB;AAAEH,gBAAAA;AAAF,eAArB,CAAD,CAAR;AACA;AACD;;AACD;AACEI,YAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AAlBJ;;AAoBAP,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAjCH,EAkCGS,KAlCH,CAkCS,UAAUC,KAAV,EAAiB;AACtBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,OApCH;AAqCA;;AACApB,MAAAA,QAAQ,CAACX,OAAO,CAACgC,KAAR,CAAc;AAAE3B,QAAAA;AAAF,OAAd,CAAD,CAAR;AACA;;AACAK,MAAAA,OAAO,CAACuB,IAAR,CAAa,QAAb;AACD;AA7CsB,GAAD,CAAxB;AA+CA,sBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,SAAS/B,OAAO,CAAC,4BAAD,CAAhB,GAAiD;AAD7D,KADT;AAIE,IAAA,SAAS,EAAC,qDAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,SAAS,EAAC,iDADZ;AAEE,IAAA,QAAQ,EAAES,MAAM,CAACuB,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDALF,eAOE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,IAAA,SAAS,EAAC,4HADZ;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAEvB,MAAM,CAACwB,YALnB;AAME,IAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,IAAA,KAAK,EAAEzB,MAAM,CAACP,MAAP,CAAcE,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAAC0B,OAAP,CAAe/B,QAAf,IAA2BK,MAAM,CAACN,MAAP,CAAcC,QAAzC,gBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BK,MAAM,CAACN,MAAP,CAAcC,QAA7C,CADD,GAEG,IAHN,CAhBF,eAqBE;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eA2BE;AACE,IAAA,SAAS,EAAC,4HADZ;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAEK,MAAM,CAACwB,YALnB;AAME,IAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,IAAA,KAAK,EAAEzB,MAAM,CAACP,MAAP,CAAcG,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,eAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAAC0B,OAAP,CAAe9B,QAAf,IAA2BI,MAAM,CAACN,MAAP,CAAcE,QAAzC,gBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BI,MAAM,CAACN,MAAP,CAAcE,QAA7C,CADD,GAEG,IAHN,CApCF,eAyCE;AACE,IAAA,SAAS,EAAC,2GADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAzCF,eA+CE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,SAAS,EAAC,wHAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CF,CAPF,CANF,CADF;AAwED,CA3HD;;AA6HA,eAAeC,KAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst axios = require(\"axios\");\n//axios.get(\"http://localhost:8080/\", { crossdomain: true })\nconst validate = (values) => {\n  const errors = {};\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @property history is passed on due to Login being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\nconst Login = ({ history }) => {\n  /* useDispatch from dispatch function from store */\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: { Username: \"\", Password: \"\" },\n    validate,\n    onSubmit: (values) => {\n      axios\n        .post(\n          \"//www.localhost:8080/\",\n          JSON.stringify({\n            action: \"login\",\n            username: values.Username,\n            Password: values.Password,\n          })\n        )\n        .then(function (response) {\n          console.log(response);\n          /* The response contains: status and a payload data: server/token */\n          switch (response.status) {\n            /* Login accepted */\n\n            case 200: {\n              const data = response.data;\n\n              /* Data should contain token & server */\n              dispatch(actions.loginSuccess({ data }));\n              dispatch(actions.setServer({ data }));\n              break;\n            }\n            case 404: {\n              const data = response.data;\n              dispatch(actions.loginFailure({ data }));\n              break;\n            }\n            default:\n              alert(\"missing memberid\");\n              break;\n          }\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      /* Use the store reducer to dispatch login actions */\n      dispatch(actions.login({ values }));\n      /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n      history.push(\"/start\");\n    },\n  });\n  return (\n    <div\n      style={{\n        backgroundImage: \"url(\" + require(\"../../background_night.png\") + \")\",\n      }}\n      className=\"flex items-center justify-center h-screen bg-scroll\"\n    >\n      <form\n        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \"\n        onSubmit={formik.handleSubmit}\n      >\n        <p className=\" justify-center\">Welcome!</p>\n        <p>Enter your login details to access Chat Up!</p>\n\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Username\"\n            name=\"Username\"\n            type=\"Text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Username}\n          ></input>\n          <div>\n            {formik.touched.Username && formik.errors.Username ? (\n              <div className=\"text-red-600\">{formik.errors.Username}</div>\n            ) : null}\n          </div>\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Password\"\n          >\n            Password\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Password\"\n            name=\"Password\"\n            type=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Password}\n          ></input>\n          <div>\n            {formik.touched.Password && formik.errors.Password ? (\n              <div className=\"text-red-600\">{formik.errors.Password}</div>\n            ) : null}\n          </div>\n          <button\n            className=\"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"submit\"\n          >\n            Login\n          </button>\n          <Link\n            to=\"/register\"\n            className=\" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"button\"\n          >\n            Register\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}