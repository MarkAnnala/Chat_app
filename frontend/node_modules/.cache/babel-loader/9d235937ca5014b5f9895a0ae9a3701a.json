{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Comment/Comment.js\";\nimport React, { useState } from \"react\";\nimport \"../../assets/main.css\";\n/**\n * Comment holds all input for creating a new comment aswell as the button for sending the comment\n * @property {Function} inputHandler callback for updating the comment text\n * @property {String} comment - the comment \n * @property {Function} setAddComment callback for sending a comment\n * @property {String} username the logged in username\n * @property {Function} setReplyBox callback for setting the reply box\n * @returns a div with a comment text input aswell as button for sending\n */\n\nconst Comment = ({\n  inputHandler,\n  comment,\n  setAddComment,\n  username,\n  setReplyBox\n}) => {\n  function onClickHandler() {\n    setAddComment(true);\n    setReplyBox(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-4 pr-4 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Enter your comment here\",\n    rows: \"3\",\n    wrap: \"hard\",\n    value: comment,\n    onChange: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Comment as \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-blue-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \" ml-auto bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\",\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Comment\", \" \")));\n};\n\nexport default Comment;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Comment/Comment.js"],"names":["React","useState","Comment","inputHandler","comment","setAddComment","username","setReplyBox","onClickHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AAEA;;;;;;;;;;AASA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA,QAAxC;AAAkDC,EAAAA;AAAlD,CAAD,KAAoE;AAEhF,WAASC,cAAT,GAAyB;AACrBH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,yBADd;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEH,OAJT;AAKE,IAAA,QAAQ,EAAED,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACa;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCG,QAAjC,CADb,CADF,eAIE;AACE,IAAA,SAAS,EAAC,sGADZ;AAEE,IAAA,OAAO,EAAEE,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIU,GAJV,CAJF,CATF,CADF;AAuBD,CA9BD;;AAgCA,eAAeN,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../../assets/main.css\";\n\n/**\n * Comment holds all input for creating a new comment aswell as the button for sending the comment\n * @property {Function} inputHandler callback for updating the comment text\n * @property {String} comment - the comment \n * @property {Function} setAddComment callback for sending a comment\n * @property {String} username the logged in username\n * @property {Function} setReplyBox callback for setting the reply box\n * @returns a div with a comment text input aswell as button for sending\n */\nconst Comment = ({ inputHandler, comment, setAddComment, username, setReplyBox}) => {\n\n    function onClickHandler(){\n        setAddComment(true);\n        setReplyBox(false);\n    }\n\n  return (\n    <div className=\"pl-4 pr-4 \">\n      <textarea\n        placeholder=\"Enter your comment here\"\n        rows=\"3\"\n        wrap='hard'\n        value={comment}\n        onChange={inputHandler}\n      ></textarea>\n\n      <div className=\"panel\">\n        <div className=\" text-white\">\n          Comment as <span className=\"text-blue-700\">{username}</span>\n        </div>\n        <button\n          className=\" ml-auto bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n          onClick={onClickHandler}\n        >\n          Comment{\" \"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}