{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/ThreadContainer/OriginalPost.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst OriginalPost = ({\n  focusedThread\n}) => {\n  // list of all threads in server object from redux store\n  const listOfThreads = useSelector(state => state.socketState.server.listOfThreads);\n\n  const focusedThreadObject = () => {\n    for (let thread of listOfThreads) {\n      if (thread.rootPost.rootHeader === focusedThread) {\n        console.log(thread);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \" w-full rounded border border-solid border-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, focusedThread);\n};\n\nexport default OriginalPost;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/ThreadContainer/OriginalPost.js"],"names":["React","useSelector","OriginalPost","focusedThread","listOfThreads","state","socketState","server","focusedThreadObject","thread","rootPost","rootHeader","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC1C;AACA,QAAMC,aAAa,GAAGH,WAAW,CAC9BI,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyBH,aADL,CAAjC;;AAIA,QAAMI,mBAAmB,GAAG,MAAM;AAChC,SAAK,IAAIC,MAAT,IAAmBL,aAAnB,EAAiC;AAC7B,UAAIK,MAAM,CAACC,QAAP,CAAgBC,UAAhB,KAA+BR,aAAnC,EAAiD;AAC7CS,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACH;AACJ;AACF,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,aADH,CADF;AAKD,CAlBD;;AAoBA,eAAeD,YAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst OriginalPost = ({ focusedThread }) => {\n  // list of all threads in server object from redux store\n  const listOfThreads = useSelector(\n    (state) => state.socketState.server.listOfThreads\n  );\n\n  const focusedThreadObject = () => {\n    for (let thread of listOfThreads){\n        if (thread.rootPost.rootHeader === focusedThread){\n            console.log(thread);\n        }\n    }\n  };\n  return (\n    <div className=\" w-full rounded border border-solid border-black\">\n      {focusedThread}\n    </div>\n  );\n};\n\nexport default OriginalPost;\n"]},"metadata":{},"sourceType":"module"}