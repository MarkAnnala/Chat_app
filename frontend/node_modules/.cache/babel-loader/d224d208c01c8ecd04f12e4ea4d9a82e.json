{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Register/Register.js\";\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Notifications from \"../Notifications/Notifications\";\n/* import Notifications from \"../Notifications/Notifications\";\n */\n\nconst axios = require(\"axios\");\n/**\n * Register provides the layout and the registration for an user account\n * A successfully validated form will redirect to login page pathname = \"/\"\n * @property history is passed on due to Register being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\n\n\nconst Register = ({\n  container\n}) => {\n  const [errorMsg, setErrorMsg] = useState(false);\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.Username) {\n      setErrorMsg(false);\n      errors.Username = \"Required\";\n    }\n\n    if (!values.Password) {\n      setErrorMsg(false);\n      errors.Password = \"Required\";\n      return errors;\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      Username: \"\",\n      Password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      axios.post(\"/\", JSON.stringify({\n        action: \"register\",\n        username: values.Username,\n        password: values.Password\n      })).then(function (response) {\n        console.log(response);\n        /* The response contains: status and a payload data: server/token */\n\n        switch (response.status) {\n          /* Register accepted */\n          case 200:\n            {\n              /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n              Notifications.registerSuccess();\n              container.classList.remove(\"right-panel-active\");\n              break;\n            }\n\n          case 404:\n            {\n              Notifications.accountExistsFailure();\n              console.log(\"Error: \" + response);\n              break;\n            }\n\n          default:\n            Notifications.unknownFailure();\n            break;\n        }\n      }).catch(function (error) {\n        console.log(error);\n        setErrorMsg(true);\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \" justify-center text-4xl font-bold font-mono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-mono text-xl \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Sign up to access our amazing community!\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Username\",\n    name: \"Username\",\n    type: \"Text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, formik.errors.Username) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, errorMsg ? /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Register failed! Try something else.\") : null), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Password\",\n    name: \"Password\",\n    type: \"Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, formik.errors.Password) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"formButton\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Sign up\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Register/Register.js"],"names":["React","useState","useFormik","Notifications","axios","require","Register","container","errorMsg","setErrorMsg","validate","values","errors","Username","Password","formik","initialValues","onSubmit","post","JSON","stringify","action","username","password","then","response","console","log","status","registerSuccess","classList","remove","accountExistsFailure","unknownFailure","catch","error","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Notifications from \"../Notifications/Notifications\";\n\n/* import Notifications from \"../Notifications/Notifications\";\n */\nconst axios = require(\"axios\");\n\n/**\n * Register provides the layout and the registration for an user account\n * A successfully validated form will redirect to login page pathname = \"/\"\n * @property history is passed on due to Register being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\nconst Register = ({ container }) => {\n  const [errorMsg, setErrorMsg] = useState(false);\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.Username) {\n      setErrorMsg(false);\n      errors.Username = \"Required\";\n    }\n\n    if (!values.Password) {\n      setErrorMsg(false);\n      errors.Password = \"Required\";\n      return errors;\n    }\n  };\n  const formik = useFormik({\n    initialValues: { Username: \"\", Password: \"\" },\n    validate,\n\n    onSubmit: (values) => {\n      axios\n        .post(\n          \"/\",\n          JSON.stringify({\n            action: \"register\",\n            username: values.Username,\n            password: values.Password,\n          })\n        )\n        .then(function (response) {\n          console.log(response);\n\n          /* The response contains: status and a payload data: server/token */\n          switch (response.status) {\n            /* Register accepted */\n\n            case 200: {\n              /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n              Notifications.registerSuccess();\n              container.classList.remove(\"right-panel-active\");\n              break;\n            }\n            case 404: {\n              Notifications.accountExistsFailure();\n              console.log(\"Error: \" + response);\n              break;\n            }\n            default:\n              Notifications.unknownFailure();\n              break;\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          setErrorMsg(true);\n        });\n    },\n  });\n  return (\n    <form\n      className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \"\n      onSubmit={formik.handleSubmit}\n    >\n      <p className=\" justify-center text-4xl font-bold font-mono\">Sign up</p>\n      <p className=\"font-mono text-xl \">\n        Sign up to access our amazing community!\n      </p>\n      <div>\n        <label\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\n          htmlFor=\"Username\"\n        >\n          Username\n        </label>\n        <input\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"Username\"\n          name=\"Username\"\n          type=\"Text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.Username}\n        ></input>\n        <div>\n          {formik.touched.Password && formik.errors.Password ? (\n            <div className=\"text-red-600\">{formik.errors.Username}</div>\n          ) : null}\n        </div>\n        <div>\n          {errorMsg ? (\n            <label className=\"text-red-600\">\n              Register failed! Try something else.\n            </label>\n          ) : null}\n        </div>\n        <label\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\n          htmlFor=\"Password\"\n        >\n          Password\n        </label>\n        <input\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"Password\"\n          name=\"Password\"\n          type=\"Password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.Password}\n        ></input>\n        <div>\n          {formik.touched.Password && formik.errors.Password ? (\n            <div className=\"text-red-600\">{formik.errors.Password}</div>\n          ) : null}\n        </div>\n        <button className=\"formButton\" type=\"submit\">\n          Sign up\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}