{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/App.js\";\nimport React from \"react\";\nimport \"./assets/main.css\";\nimport Container from \"./components/Container/Container\";\n\nconst App = () => {\n  var ws = new WebSocket(\"ws://localhost:8080/websocket\");\n\n  ws.onopen = () => {\n    console.log(\"connection established!\");\n  };\n\n  ws.onmessage = message => {\n    console.log(\"Message: \", message.data);\n  };\n\n  ws.send(JSON.stringify({\n    message: \"hoe\"\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/App.js"],"names":["React","Container","App","ws","WebSocket","onopen","console","log","onmessage","message","data","send","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,MAAIC,EAAE,GAAG,IAAIC,SAAJ,CAAc,+BAAd,CAAT;;AACAD,EAAAA,EAAE,CAACE,MAAH,GAAW,MAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAAuC,GAAvD;;AACAJ,EAAAA,EAAE,CAACK,SAAH,GAAgBC,OAAD,IAAa;AAACH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,OAAO,CAACC,IAAjC;AAAuC,GAApE;;AACAP,EAAAA,EAAE,CAACQ,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACJ,IAAAA,OAAO,EAAE;AAAV,GAAf,CAAR;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAZD;;AAcA,eAAeP,GAAf","sourcesContent":["import React from \"react\";\nimport \"./assets/main.css\";\nimport Container from \"./components/Container/Container\";\n\nconst App = () => {\n  var ws = new WebSocket(\"ws://localhost:8080/websocket\");\n  ws.onopen= ()=>{console.log(\"connection established!\")};\n  ws.onmessage = (message) => {console.log(\"Message: \", message.data)};\n  ws.send(JSON.stringify({message: \"hoe\"}))\n\n\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}