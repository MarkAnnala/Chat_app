{"ast":null,"code":"const initialState = {\n  socket: null,\n  wsOnline: false,\n  socketServer: null\n};\n/**\n * perform a task depending on the action dispatched\n *\n * @property {object} state the current state that is being held by the redux store\n * @property {object} action contains the type and payload\n */\n\nconst socketReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECT\":\n      /* store websocket in state.socket */\n      console.log(\"connecting to ws\");\n      return { ...state,\n        socket: action.payload,\n        wsOnline: true\n      };\n\n    case \"REGISTER\":\n      console.log(action.payload);\n      state.socket.send(JSON.stringify(action.payload));\n      return state;\n\n    case \"SEND_MESSAGE\":\n      /* TODO handle sending on socket messages */\n      return state;\n\n    case \"RESPONSE\"\n    /* TODO decipher and handle response here!! */\n    :\n      console.log(\"handle the response bro pls\");\n      console.log(action.payload);\n      return state;\n\n    case \"DISCONNECTED\":\n      return { ...state,\n        socket: action.payload,\n        wsOnline: false\n      };\n\n    case \"SETSERVER\":\n      return { ...state,\n        socketServer: action.payload\n      };\n\n    case \"SENDMESSAGE\":\n      state.socket.send(JSON.stringify(action.payload));\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default socketReducer;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/reducers/socketReducer.js"],"names":["initialState","socket","wsOnline","socketServer","socketReducer","state","action","type","console","log","payload","send","JSON","stringify"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,QAAQ,EAAE,KAA1B;AAAiCC,EAAAA,YAAY,EAAE;AAA/C,CAArB;AAEA;;;;;;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,MAAM,EAAEK,MAAM,CAACI,OAA3B;AAAoCR,QAAAA,QAAQ,EAAE;AAA9C,OAAP;;AACF,SAAK,UAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACAL,MAAAA,KAAK,CAACJ,MAAN,CAAaU,IAAb,CAAkBC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACI,OAAtB,CAAlB;AACA,aAAOL,KAAP;;AACF,SAAK,cAAL;AACE;AACA,aAAOA,KAAP;;AACF,SAAK;AAAW;AAAhB;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,aAAOL,KAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAE,GAAGA,KAAL;AAAYJ,QAAAA,MAAM,EAAEK,MAAM,CAACI,OAA3B;AAAoCR,QAAAA,QAAQ,EAAE;AAA9C,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYF,QAAAA,YAAY,EAAEG,MAAM,CAACI;AAAjC,OAAP;;AACF,SAAK,aAAL;AACEL,MAAAA,KAAK,CAACJ,MAAN,CAAaU,IAAb,CAAkBC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACI,OAAtB,CAAlB;AACA,aAAOL,KAAP;;AACF;AACE,aAAOA,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,aAAf","sourcesContent":["const initialState = { socket: null, wsOnline: false, socketServer: null };\n\n/**\n * perform a task depending on the action dispatched\n *\n * @property {object} state the current state that is being held by the redux store\n * @property {object} action contains the type and payload\n */\nconst socketReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECT\":\n      /* store websocket in state.socket */\n      console.log(\"connecting to ws\");\n      return { ...state, socket: action.payload, wsOnline: true };\n    case \"REGISTER\":\n      console.log(action.payload);\n      state.socket.send(JSON.stringify(action.payload));\n      return state;\n    case \"SEND_MESSAGE\":\n      /* TODO handle sending on socket messages */\n      return state;\n    case \"RESPONSE\" /* TODO decipher and handle response here!! */:\n      console.log(\"handle the response bro pls\");\n      console.log(action.payload);\n      return state;\n    case \"DISCONNECTED\":\n      return { ...state, socket: action.payload, wsOnline: false };\n    case \"SETSERVER\":\n      return { ...state, socketServer: action.payload };\n    case \"SENDMESSAGE\": \n      state.socket.send(JSON.stringify(action.payload));\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default socketReducer;\n"]},"metadata":{},"sourceType":"module"}