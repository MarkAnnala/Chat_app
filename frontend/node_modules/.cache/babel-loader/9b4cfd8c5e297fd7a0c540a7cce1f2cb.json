{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/StartChat.js\";\nimport React, { useState } from 'react';\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst StartChat = ({\n  friends,\n  username,\n  setShowAddChat\n}) => {\n  /* useDispatch from dispatch function from store */\n  const dispatch = useDispatch();\n  /*local state for which friend to start chat with     */\n\n  const [chosen, setChosen] = useState([]);\n\n  const handleCheck = e => {\n    e.persist();\n\n    if (e.target.checked) {\n      setChosen(prevFriends => [...prevFriends, e.target.value]);\n    } else {\n      const prev = chosen.filter(friend => friend != e.target.value);\n      setChosen(prev);\n    }\n  };\n\n  const startChat = () => {\n    const data = {\n      chat_name: username,\n      from: username,\n      members: chosen\n    };\n    dispatch(actions.startChat(data));\n    setShowAddChat(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      left: \"24rem\"\n    },\n    className: \" w-56 z-40 bg-white rounded mt-2 bg-gray-700 absolute p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-solid border-b border-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Choose friends to add:\"), friends.map((friend, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"flex flex-row justify-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }\n    }, friend), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleCheck,\n      type: \"checkbox\",\n      value: friend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"rounded w-full bg-blue-600 mt-4\",\n    onClick: startChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Create chat\"));\n};\n\nexport default StartChat;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/StartChat.js"],"names":["React","useState","actions","useDispatch","StartChat","friends","username","setShowAddChat","dispatch","chosen","setChosen","handleCheck","e","persist","target","checked","prevFriends","value","prev","filter","friend","startChat","data","chat_name","from","members","left","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAyC;AACrD;AACF,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA;;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,WAAW,GAAIC,CAAD,IAAM;AACtBA,IAAAA,CAAC,CAACC,OAAF;;AACA,QAAGD,CAAC,CAACE,MAAF,CAASC,OAAZ,EACA;AACIL,MAAAA,SAAS,CAACM,WAAW,IAAI,CAAC,GAAGA,WAAJ,EAAiBJ,CAAC,CAACE,MAAF,CAASG,KAA1B,CAAhB,CAAT;AACH,KAHD,MAKA;AACI,YAAMC,IAAI,GAAGT,MAAM,CAACU,MAAP,CAAcC,MAAM,IAAIA,MAAM,IAAIR,CAAC,CAACE,MAAF,CAASG,KAA3C,CAAb;AACAP,MAAAA,SAAS,CAACQ,IAAD,CAAT;AACH;AACJ,GAXD;;AAaA,QAAMG,SAAS,GAAE,MAAM;AACnB,UAAMC,IAAI,GAAG;AAACC,MAAAA,SAAS,EAAEjB,QAAZ;AAAsBkB,MAAAA,IAAI,EAAElB,QAA5B;AAAsCmB,MAAAA,OAAO,EAAEhB;AAA/C,KAAb;AACAD,IAAAA,QAAQ,CAACN,OAAO,CAACmB,SAAR,CAAkBC,IAAlB,CAAD,CAAR;AACAf,IAAAA,cAAc,CAAC,KAAD,CAAd;AAEH,GALD;;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACmB,MAAAA,IAAI,EAAE;AAAP,KAAZ;AAA4B,IAAA,SAAS,EAAC,2DAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAIKrB,OAAO,CAACsB,GAAR,CAAY,CAACP,MAAD,EAASQ,KAAT,KAAmB;AAE5B,wBAAO;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,+BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBR,MAAnB,CADN,eAEM;AAAO,MAAA,QAAQ,EAAGT,WAAlB;AAA+B,MAAA,IAAI,EAAC,UAApC;AAA+C,MAAA,KAAK,EAAGS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,CAAP;AAIH,GANA,CAJL,eAWI;AAAQ,IAAA,SAAS,EAAC,iCAAlB;AAAoD,IAAA,OAAO,EAAEC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,CADJ;AAeH,CA1CD;;AA4CA,eAAejB,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst StartChat = ({friends, username, setShowAddChat}) => {\n      /* useDispatch from dispatch function from store */\n    const dispatch = useDispatch();\n\n    /*local state for which friend to start chat with     */\n    const [chosen, setChosen] = useState([]);\n\n    const handleCheck = (e) =>{\n        e.persist();\n        if(e.target.checked)\n        {\n            setChosen(prevFriends => [...prevFriends, e.target.value]); \n        }\n        else\n        {\n            const prev = chosen.filter(friend => friend != e.target.value); \n            setChosen(prev);\n        }\n    };\n\n    const startChat= () => {\n        const data = {chat_name: username, from: username, members: chosen};\n        dispatch(actions.startChat(data));\n        setShowAddChat(false);\n\n    };\n\n    return (\n        <div style={{left: \"24rem\"}}className=\" w-56 z-40 bg-white rounded mt-2 bg-gray-700 absolute p-2\" >\n            <div className=\"border-solid border-b border-black\">\n            Choose friends to add:\n            </div>\n            {friends.map((friend, index) => {\n\n                return <div key={index} className=\"flex flex-row justify-between\">\n                             <div className=\"\">{friend}</div>\n                             <input onChange ={handleCheck} type=\"checkbox\" value ={friend}/>\n                        </div>\n            })} \n            <button className=\"rounded w-full bg-blue-600 mt-4\" onClick={startChat}>Create chat</button>\n        </div>\n    )\n}\n\nexport default StartChat;\n"]},"metadata":{},"sourceType":"module"}