{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Register/Register.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\nimport * as Notifications from \"../Notifications/Notifications\";\n/* import Notifications from \"../Notifications/Notifications\";\n */\n\nconst axios = require(\"axios\");\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n/**\n * Register provides the layout and the registration for an user account\n * A successfully validated form will redirect to login page pathname = \"/\"\n * @property history is passed on due to Register being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\n\n\nconst Register = ({\n  history\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      Username: \"\",\n      Password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      axios.post(\"/\", JSON.stringify({\n        action: \"register\",\n        username: values.Username,\n        password: values.Password\n      })).then(function (response) {\n        console.log(response);\n        /* The response contains: status and a payload data: server/token */\n\n        switch (response.status) {\n          /* Register accepted */\n          case 200:\n            {\n              /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n              Notifications.registerSuccess();\n              history.push(\"/\");\n              break;\n            }\n\n          case 404:\n            {\n              Notifications.accountExistsFailure();\n              console.log(\"Error: \" + response);\n              break;\n            }\n\n          default:\n            Notifications.unknownFailure();\n            break;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-center h-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Username\",\n    name: \"Username\",\n    type: \"Text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, formik.errors.Username) : null), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Password\",\n    name: \"Password\",\n    type: \"Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, formik.errors.Password) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Register/Register.js"],"names":["React","useFormik","actions","useDispatch","Notifications","axios","require","validate","values","errors","Username","Password","Register","history","formik","initialValues","onSubmit","post","JSON","stringify","action","username","password","then","response","console","log","status","registerSuccess","push","accountExistsFailure","unknownFailure","catch","error","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\nimport * as Notifications from \"../Notifications/Notifications\";\n\n/* import Notifications from \"../Notifications/Notifications\";\n */\nconst axios = require(\"axios\");\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n/**\n * Register provides the layout and the registration for an user account\n * A successfully validated form will redirect to login page pathname = \"/\"\n * @property history is passed on due to Register being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\nconst Register = ({ history }) => {\n  const formik = useFormik({\n    initialValues: { Username: \"\", Password: \"\" },\n    validate,\n\n    onSubmit: (values) => {\n      axios\n        .post(\n          \"/\",\n          JSON.stringify({\n            action: \"register\",\n            username: values.Username,\n            password: values.Password,\n          })\n        )\n        .then(function (response) {\n          console.log(response);\n\n          /* The response contains: status and a payload data: server/token */\n          switch (response.status) {\n            /* Register accepted */\n\n            case 200: {\n              /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n              Notifications.registerSuccess();\n              history.push(\"/\");\n              break;\n            }\n            case 404: {\n              Notifications.accountExistsFailure();\n              console.log(\"Error: \" + response);\n              break;\n            }\n            default:\n              Notifications.unknownFailure();\n              break;\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n  });\n  return (\n    <div className=\"flex items-center justify-center h-screen\">\n      <form\n        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \"\n        onSubmit={formik.handleSubmit}\n      >\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Username\"\n            name=\"Username\"\n            type=\"Text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Username}\n          ></input>\n          <div>\n            {formik.touched.Password && formik.errors.Password ? (\n              <div className=\"text-red-600\">{formik.errors.Username}</div>\n            ) : null}\n          </div>\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Password\"\n          >\n            Password\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Password\"\n            name=\"Password\"\n            type=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Password}\n          ></input>\n          <div>\n            {formik.touched.Password && formik.errors.Password ? (\n              <div className=\"text-red-600\">{formik.errors.Password}</div>\n            ) : null}\n          </div>\n          <button\n            className=\"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"submit\"\n          >\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}