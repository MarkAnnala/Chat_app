{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @property history is passed on due to Login being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\n\n\nconst Login = ({\n  history\n}) => {\n  /* useDispatch from dispatch function from store */\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      Username: \"\",\n      Password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      /* Use the store reducer to dispatch login actions */\n      dispatch(actions.login({\n        values\n      }));\n      /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n\n      history.push(\"/start\");\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-center h-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Username\",\n    name: \"Username\",\n    type: \"Text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), formik.touched.Username && formik.errors.Username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, formik.errors.Username) : null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"Password\",\n    name: \"Password\",\n    type: \"Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), formik.touched.Password && formik.errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, formik.errors.Password) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/Login/Login.js"],"names":["React","Link","useFormik","actions","useDispatch","validate","values","errors","Username","Password","Login","history","dispatch","formik","initialValues","onSubmit","login","push","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.Username) {\n    errors.Username = \"Required\";\n  }\n\n  if (!values.Password) {\n    errors.Password = \"Required\";\n    return errors;\n  }\n};\n\n/**\n * Login provides the layout and login of a user\n * A successfully validated form will redirect to LandingPage with pathname = \"/start\"\n * @property history is passed on due to Login being an immediate child of a Route component in Container component\n * @returns a div containing the form to fill out and its validation\n */\nconst Login = ({ history }) => {\n  /* useDispatch from dispatch function from store */\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: { Username: \"\", Password: \"\" },\n    validate,\n    onSubmit: (values) => {\n      /* Use the store reducer to dispatch login actions */\n      dispatch(actions.login({ values }));\n      /* TODO history.push isnt declarative... maybe change this when we have login authentication. */\n      history.push(\"/start\");\n    },\n  });\n  return (\n    <div className=\"flex items-center justify-center h-screen\">\n      <form\n        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 \"\n        onSubmit={formik.handleSubmit}\n      >\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Username\"\n            name=\"Username\"\n            type=\"Text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Username}\n          ></input>\n          {formik.touched.Username && formik.errors.Username ? (\n            <div className=\"text-red-600\">{formik.errors.Username}</div>\n          ) : null}\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"Password\"\n          >\n            Password\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"Password\"\n            name=\"Password\"\n            type=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.Password}\n          ></input>\n          {formik.touched.Password && formik.errors.Password ? (\n            <div className=\"text-red-600\">{formik.errors.Password}</div>\n          ) : null}\n          <button\n            className=\"5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"submit\"\n          >\n            Login\n          </button>\n          <Link\n            to=\"/register\"\n            className=\" mt-10 ml-40 5pxbg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\n            type=\"button\"\n          >\n            Register\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}