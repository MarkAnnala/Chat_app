{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/MessagesList/MessagesList.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport plus from \"../../../img/plus.svg\";\nimport StartChat from \"./StartChat\";\nimport { useSelector } from \"react-redux\";\nimport ReactTooltip from \"react-tooltip\";\n/**\n * contains the list of available direct messages that we can chat in\n * @param {function} handleFocusedChat callback function used to get the target of what we are clicking on\n * @property {string} username  username of the logged in user\n * @property {String} focusedChat - a string used to check what chat we are focusing on\n * returns a div containing all direct messages\n */\n\nconst MessagesList = ({\n  handleFocusedChat,\n  username,\n  focusedChat\n}) => {\n  /* Get friendslist from redux store */\n  const friends = useSelector(state => state.socketState.listOfFriends);\n  /* Get list of dms from redux store */\n\n  const chatObjects = useSelector(state => state.socketState.listOfDms);\n  const [chats, setChats] = useState([]);\n  useEffect(() => {\n    if (chatObjects !== null) {\n      setChats(chatObjects);\n    }\n  }, [chatObjects]);\n  /* Determens if we're showing the add chat modal */\n\n  const [showAddChat, setShowAddChat] = useState(false);\n  /* Used to highlight the add icon when hovered */\n\n  const [hovered, setHovered] = useState(false);\n  /*On mount, add event listerner for click outside ref addChatModal*/\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n  /**\n   * handles a click outside of the create chat modal\n   * @param event of the window object\n   */\n\n  const handleClick = event => {\n    if (addChatModal.current.contains(event.target)) {\n      // inside click\n      return;\n    } else {\n      setShowAddChat(false);\n    }\n  };\n  /*Keep track of the modal */\n\n\n  const addChatModal = useRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messagesList\",\n    className: \"mt-5 text-white text-xl h-auto border-solid border-b-2 border-gray-700 flex flex-row justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Direct Messages\", /*#__PURE__*/React.createElement(\"img\", {\n    \"data-tip\": true,\n    \"data-for\": \"createChatTip\",\n    onClick: () => {\n      setShowAddChat(true);\n    },\n    src: plus,\n    onMouseEnter: () => {\n      setHovered(!hovered);\n    },\n    onMouseLeave: () => {\n      setHovered(!hovered);\n    },\n    alt: \"Create a new chat!\",\n    className: hovered ? \"plusIcon-custom-hover h-6 w-6 cursor-pointer\" : \"h-6 w-6 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"createChatTip\",\n    place: \"right\",\n    effect: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Create a new chat!\")), /*#__PURE__*/React.createElement(\"div\", {\n    ref: addChatModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, showAddChat ? /*#__PURE__*/React.createElement(StartChat, {\n    setShowAddChat: setShowAddChat,\n    username: username,\n    friends: friends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, chats.map((chat, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleFocusedChat,\n      key: index,\n      id: chat.chatID,\n      className: \"text-white text-xl hover:bg-gray-500 cursor-pointer flex flex-row justify-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: chat.chatID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, chat.members.length == 2 && chat.members.includes(chat.chatName) ? chat.members.filter(m => m != username)[0] : chat.chatName, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-red-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, focusedChat === chat.chatID ? \"\" : !chat.sinceLastSeen ? \"\" : \"+\" + chat.sinceLastSeen));\n  })));\n};\n\nexport default MessagesList;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/MessagesList/MessagesList.js"],"names":["React","useState","useEffect","useRef","StartChat","useSelector","ReactTooltip","MessagesList","handleFocusedChat","username","focusedChat","friends","state","socketState","listOfFriends","chatObjects","listOfDms","chats","setChats","showAddChat","setShowAddChat","hovered","setHovered","document","addEventListener","handleClick","removeEventListener","event","addChatModal","current","contains","target","plus","map","chat","index","chatID","members","length","includes","chatName","filter","m","sinceLastSeen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport plus from \"../../../img/plus.svg\";\nimport StartChat from \"./StartChat\";\nimport { useSelector } from \"react-redux\";\nimport ReactTooltip from \"react-tooltip\";\n\n/**\n * contains the list of available direct messages that we can chat in\n * @param {function} handleFocusedChat callback function used to get the target of what we are clicking on\n * @property {string} username  username of the logged in user\n * @property {String} focusedChat - a string used to check what chat we are focusing on\n * returns a div containing all direct messages\n */\nconst MessagesList = ({ handleFocusedChat, username, focusedChat }) => {\n  /* Get friendslist from redux store */\n  const friends = useSelector((state) => state.socketState.listOfFriends);\n\n  /* Get list of dms from redux store */\n  const chatObjects = useSelector((state) => state.socketState.listOfDms);\n\n  const [chats, setChats] = useState([]);\n\n  useEffect(() => {\n    if (chatObjects !== null) {\n      setChats(chatObjects);\n    }\n  }, [chatObjects]);\n\n  /* Determens if we're showing the add chat modal */\n  const [showAddChat, setShowAddChat] = useState(false);\n  /* Used to highlight the add icon when hovered */\n  const [hovered, setHovered] = useState(false);\n  /*On mount, add event listerner for click outside ref addChatModal*/\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n\n  /**\n   * handles a click outside of the create chat modal\n   * @param event of the window object\n   */\n  const handleClick = (event) => {\n    if (addChatModal.current.contains(event.target)) {\n      // inside click\n      return;\n    } else {\n      setShowAddChat(false);\n    }\n  };\n  /*Keep track of the modal */\n  const addChatModal = useRef();\n\n  return (\n    <div className=\"flex flex-col ml-2\">\n      <div\n        id=\"messagesList\"\n        className=\"mt-5 text-white text-xl h-auto border-solid border-b-2 border-gray-700 flex flex-row justify-between\"\n      >\n        Direct Messages\n        <img\n          data-tip\n          data-for=\"createChatTip\"\n          onClick={() => {\n            setShowAddChat(true);\n          }}\n          src={plus}\n          onMouseEnter={() => {\n            setHovered(!hovered);\n          }}\n          onMouseLeave={() => {\n            setHovered(!hovered);\n          }}\n          alt=\"Create a new chat!\"\n          className={\n            hovered\n              ? \"plusIcon-custom-hover h-6 w-6 cursor-pointer\"\n              : \"h-6 w-6 cursor-pointer\"\n          }\n        />\n        <ReactTooltip id=\"createChatTip\" place=\"right\" effect=\"solid\">\n          Create a new chat!\n        </ReactTooltip>\n      </div>\n\n      <div ref={addChatModal}>\n        {showAddChat ? (\n          <StartChat\n            setShowAddChat={setShowAddChat}\n            username={username}\n            friends={friends}\n          />\n        ) : null}\n      </div>\n      <div className=\"flex flex-col\">\n        {chats.map((chat, index) => {\n          return (\n            <div\n              onClick={handleFocusedChat}\n              key={index}\n              id={chat.chatID}\n              className=\"text-white text-xl hover:bg-gray-500 cursor-pointer flex flex-row justify-between\"\n            >\n              {/* TODO FIX SAME ID BAD PRAXIS */}\n              <div id={chat.chatID}>{chat.members.length == 2 && chat.members.includes(chat.chatName) ? (chat.members.filter(m=> m!= username)[0]): (chat.chatName)} </div>\n              <div className=\"text-red-700\">\n                {focusedChat === chat.chatID\n                  ? \"\"\n                  : !chat.sinceLastSeen\n                  ? \"\"\n                  : \"+\" + chat.sinceLastSeen}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesList;\n"]},"metadata":{},"sourceType":"module"}