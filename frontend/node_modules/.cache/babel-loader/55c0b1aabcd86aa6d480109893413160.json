{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/FocusedView/FocusedView.js\";\nimport React from \"react\";\nimport \"../../assets/main.css\";\nimport ChatContainer from \"../ChatContainer/ChatContainer\";\nimport ThreadContainer from \"../ThreadContainer/ThreadContainer\";\n/**\n * FocusedView is the component that makes sure to route to specific component that is focused on\n * @property {String} focusedChat - a string used to check what chat we are focusing on\n * @property {String} focusedPage - a string used to check what page we are focusing on\n * @property {String} focusedThread - a string used to check what thread we are focusing on \n * @property {Function} handleFocusedThread - callback funktion for setting the focused thread\n * @property {Function} resetFocusedThread - callback for resetting the focused thread\n * @returns the appropriate component that should be displayed\n */\n\nconst FocusedView = ({\n  focusedChat,\n  focusedPage,\n  focusedThread,\n  handleFocusedThread,\n  resetFocusedThread\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, focusedPage === \"Home\" ? /*#__PURE__*/React.createElement(ChatContainer, {\n    focusedChat: focusedChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(ThreadContainer, {\n    focusedThread: focusedThread,\n    handleFocusedThread: handleFocusedThread,\n    resetFocusedThread: resetFocusedThread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default FocusedView;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/FocusedView/FocusedView.js"],"names":["React","ChatContainer","ThreadContainer","FocusedView","focusedChat","focusedPage","focusedThread","handleFocusedThread","resetFocusedThread"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAEA;;;;;;;;;;AASA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,aAA5B;AAA2CC,EAAAA,mBAA3C;AAAgEC,EAAAA;AAAhE,CAAD,KAA0F;AAC5G,sBACE,0CACGH,WAAW,KAAK,MAAhB,gBACC,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAED,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,eAAD;AAAiB,IAAA,aAAa,EAAEE,aAAhC;AAA+C,IAAA,mBAAmB,EAAEC,mBAApE;AAAyF,IAAA,kBAAkB,EAAEC,kBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AASD,CAVD;;AAYA,eAAeL,WAAf","sourcesContent":["import React from \"react\";\nimport \"../../assets/main.css\";\nimport ChatContainer from \"../ChatContainer/ChatContainer\";\nimport ThreadContainer from \"../ThreadContainer/ThreadContainer\";\n\n/**\n * FocusedView is the component that makes sure to route to specific component that is focused on\n * @property {String} focusedChat - a string used to check what chat we are focusing on\n * @property {String} focusedPage - a string used to check what page we are focusing on\n * @property {String} focusedThread - a string used to check what thread we are focusing on \n * @property {Function} handleFocusedThread - callback funktion for setting the focused thread\n * @property {Function} resetFocusedThread - callback for resetting the focused thread\n * @returns the appropriate component that should be displayed\n */\nconst FocusedView = ({ focusedChat, focusedPage, focusedThread, handleFocusedThread, resetFocusedThread }) => {\n  return (\n    <>\n      {focusedPage === \"Home\" ? (\n        <ChatContainer focusedChat={focusedChat} />\n      ) : (\n        <ThreadContainer focusedThread={focusedThread} handleFocusedThread={handleFocusedThread} resetFocusedThread={resetFocusedThread} />\n      )}\n    </>\n  );\n};\n\nexport default FocusedView;\n"]},"metadata":{},"sourceType":"module"}