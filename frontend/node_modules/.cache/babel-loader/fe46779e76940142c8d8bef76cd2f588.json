{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/MessagesList/StartChat.js\";\nimport React, { useState } from \"react\";\nimport * as actions from \"../../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n/**\n * StartChat is the component which is seen when pressing the '+' icon next to active chats\n * @property {array} friends list containing the friends of the suer\n * @property {string} username the username of the user\n * @param {function} setShowAddChat callback function is used to show/hide the StartChat modal\n * @returns the chat modal \n */\n\nconst StartChat = ({\n  friends,\n  username,\n  setShowAddChat\n}) => {\n  const dispatch = useDispatch();\n  /*local state for which friend to start chat with */\n\n  const [chosen, setChosen] = useState([username]);\n  /* Used when clicking on a checkbox */\n\n  const handleCheck = e => {\n    e.persist();\n\n    if (e.target.checked) {\n      setChosen(prevFriends => [...prevFriends, e.target.value]);\n    } else {\n      /*Friend was clicked, this removes that friend*/\n      const prev = chosen.filter(friend => friend != e.target.value);\n      setChosen(prev);\n    }\n  };\n  /* handles the chatname */\n\n\n  const [chatName, setChatName] = useState(\"\");\n\n  const handleChatName = event => {\n    setChatName(event.target.value);\n  };\n\n  const startChat = () => {\n    //only username in state, noone else chosen\n    if (chosen.length === 1) {\n      //TODO Display errors for the user???\n      setShowAddChat(false);\n    } else {\n      const data = {\n        chatName: chatName,\n        from: username,\n        members: chosen\n      };\n      dispatch(actions.startChat(data));\n      setShowAddChat(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      left: \"24rem\",\n      top: \"16rem\"\n    },\n    className: \" w-56 z-40 rounded mt-2 bg-gray-700 absolute p-2  w-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-white border-solid border-b border-black mb-2 pr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Choose friends to add:\"), friends.map((friend, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"flex text-white flex-row justify-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, friend), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleCheck,\n      type: \"checkbox\",\n      className: \" \",\n      value: friend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \" mt-2 text-white input-box-custom-bg shadow appearance-none \",\n    type: \"text\",\n    onChange: handleChatName,\n    value: chatName,\n    placeholder: \"Chat name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"rounded w-full bg-blue-600 mt-4 cursor-pointer\",\n    onClick: startChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Create chat\"));\n};\n\nexport default StartChat;","map":{"version":3,"sources":["/Users/Mark/Documents/Skola/OSPP/adrenaline/frontend/src/components/InfoDisplayList/MessagesList/StartChat.js"],"names":["React","useState","actions","useDispatch","StartChat","friends","username","setShowAddChat","dispatch","chosen","setChosen","handleCheck","e","persist","target","checked","prevFriends","value","prev","filter","friend","chatName","setChatName","handleChatName","event","startChat","length","data","from","members","left","top","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as actions from \"../../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\n/**\n * StartChat is the component which is seen when pressing the '+' icon next to active chats\n * @property {array} friends list containing the friends of the suer\n * @property {string} username the username of the user\n * @param {function} setShowAddChat callback function is used to show/hide the StartChat modal\n * @returns the chat modal \n */\nconst StartChat = ({ friends, username, setShowAddChat }) => {\n  const dispatch = useDispatch();\n\n  /*local state for which friend to start chat with */\n  const [chosen, setChosen] = useState([username]);\n  /* Used when clicking on a checkbox */\n  const handleCheck = (e) => {\n    e.persist();\n    if (e.target.checked) {\n      setChosen((prevFriends) => [...prevFriends, e.target.value]);\n    } else {\n      /*Friend was clicked, this removes that friend*/\n      const prev = chosen.filter((friend) => friend != e.target.value);\n      setChosen(prev);\n    }\n  };\n\n  /* handles the chatname */\n  const [chatName, setChatName] = useState(\"\");\n  const handleChatName = (event) => {\n    setChatName(event.target.value);\n  };\n\n  const startChat = () => {\n    //only username in state, noone else chosen\n    if (chosen.length === 1) {\n      //TODO Display errors for the user???\n      setShowAddChat(false);\n    } else {\n      const data = { chatName: chatName, from: username, members: chosen };\n      dispatch(actions.startChat(data));\n      setShowAddChat(false);\n    }\n  };\n\n  return (\n    <div\n      style={{ left: \"24rem\", top: \"16rem\" }}\n      className=\" w-56 z-40 rounded mt-2 bg-gray-700 absolute p-2  w-auto\"\n    >\n      <div className=\"text-white border-solid border-b border-black mb-2 pr-3\">\n        Choose friends to add:\n      </div>\n      {friends.map((friend, index) => {\n        return (\n          <div key={index} className=\"flex text-white flex-row justify-between\">\n            <div className=\"\">{friend}</div>\n            <input\n              onChange={handleCheck}\n              type=\"checkbox\"\n              className=\" \"\n              value={friend}\n            />\n          </div>\n        );\n      })}\n      <input\n        className=\" mt-2 text-white input-box-custom-bg shadow appearance-none \"\n        type=\"text\"\n        onChange={handleChatName}\n        value={chatName}\n        placeholder=\"Chat name...\"\n      />\n      <button className=\"rounded w-full bg-blue-600 mt-4 cursor-pointer\" onClick={startChat}>\n        Create chat\n      </button>\n    </div>\n  );\n};\n\nexport default StartChat;\n"]},"metadata":{},"sourceType":"module"}